import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as p,e as d,a as n,d as s,w as r,b as a,f as t}from"./app-d6438571.js";const m={},u={class:"table-of-contents"},v=t(`<h2 id="docker安装nginx" tabindex="-1"><a class="header-anchor" href="#docker安装nginx" aria-hidden="true">#</a> docker安装nginx</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拉取镜像</span>
<span class="token function">docker</span> pull nginx:1.14.0
<span class="token function">docker</span> images
<span class="token comment"># 运行容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> nginx-test <span class="token parameter variable">-p</span> <span class="token number">8080</span>:80 <span class="token parameter variable">-d</span> nginx:1.14.0
<span class="token comment"># 访问地址</span>
<span class="token function">curl</span> <span class="token number">127.0</span>.0.1:8080
<span class="token comment"># 进入nginx-test内部</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> nginx-test /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="将容器制作为镜像" tabindex="-1"><a class="header-anchor" href="#将容器制作为镜像" aria-hidden="true">#</a> 将容器制作为镜像</h2><blockquote><p>以上述的nginx容器为例</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将nginx-test容器打包成镜像</span>
<span class="token function">docker</span> commit nginx-test my/nginx:v1
<span class="token comment"># 查看镜像</span>
<span class="token function">docker</span> images
<span class="token comment"># 导出镜像</span>
<span class="token function">docker</span> save <span class="token parameter variable">-o</span> my-nginx.tar my/nginx:v1
<span class="token function">docker</span> save my/nginx:v1 <span class="token operator">&gt;</span> /opt/docker/my-nginx.tar
<span class="token comment"># 导入镜像</span>
<span class="token function">docker</span> load <span class="token parameter variable">-i</span> nginx-k8s.tar
<span class="token function">docker</span> load <span class="token operator">&lt;</span> /opt/docker/my-nginx.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker安装mysql" tabindex="-1"><a class="header-anchor" href="#docker安装mysql" aria-hidden="true">#</a> docker安装mysql</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拉取镜像</span>
<span class="token function">docker</span> pull mysql:5.7
<span class="token comment"># 准备文件</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /opt/docker/mysql/data /opt/docker/mysql/logs /opt/docker/mysql/conf
<span class="token function">touch</span> /opt/docker/mysql/conf/my.cnf
<span class="token comment"># 运行mysql容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 <span class="token parameter variable">--name</span> mysql <span class="token parameter variable">-v</span> /opt/docker/mysql/conf:/etc/mysql/conf.d <span class="token parameter variable">-v</span> /opt/docker/mysql/logs:/logs <span class="token parameter variable">-v</span> /opt/docker/mysql/data:/var/lib/mysql <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span> <span class="token parameter variable">-d</span> mysql:5.7
<span class="token comment"># 客户端连接</span>
mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span> <span class="token parameter variable">-h</span> <span class="token number">192.16</span>.18.115
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker安装redis" tabindex="-1"><a class="header-anchor" href="#docker安装redis" aria-hidden="true">#</a> docker安装redis</h2>`,8),k={href:"https://redis.io/",target:"_blank",rel:"noopener noreferrer"},b=n("br",null,null,-1),h=n("br",null,null,-1),g={href:"https://hub.docker.com/_/redis?tab=tag&page=1&ordering=last_updated",target:"_blank",rel:"noopener noreferrer"},f=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拉取镜像</span>
<span class="token function">docker</span> pull redis:6.0.10
<span class="token comment"># 运行容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> redis-test <span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 <span class="token parameter variable">-v</span> /data/redis/data:/data <span class="token parameter variable">-d</span> redis:6.0.10 <span class="token parameter variable">--appendonly</span> <span class="token function">yes</span> 
<span class="token comment"># 进入客户端</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> redis-test  redis-cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker安装solr" tabindex="-1"><a class="header-anchor" href="#docker安装solr" aria-hidden="true">#</a> docker安装solr</h2>`,2),_={href:"https://github.com/docker-solr/docker-solr/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"},x=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拉取镜像</span>
<span class="token function">docker</span> pull solr:6.5.1
<span class="token comment"># 运行solr</span>
<span class="token comment">#docker run -it --rm --name solr -d -p 8983:8983  -v $HOME/mydata:/opt/solr/mydata solr:6.5.1</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> solr <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">8985</span>:8983 solr:6.5.1
<span class="token comment"># 创建core</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token parameter variable">--user</span><span class="token operator">=</span>solr solr bin/solr create_core <span class="token parameter variable">-c</span> gettingstarted

<span class="token comment"># 加载数据</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token parameter variable">--user</span><span class="token operator">=</span>solr solr bin/post <span class="token parameter variable">-c</span> gettingstarted example/exampledocs/manufacturers.xml

<span class="token comment">#将宿主机文件复制到容器</span>
<span class="token function">docker</span> <span class="token function">cp</span> <span class="token environment constant">$HOME</span>/mydata/mydata.xml my_solr:/opt/solr/mydata.xml
<span class="token comment">#加载数据</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token parameter variable">--user</span><span class="token operator">=</span>solr solr bin/post <span class="token parameter variable">-c</span> gettingstarted mydata.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker安装tomcat" tabindex="-1"><a class="header-anchor" href="#docker安装tomcat" aria-hidden="true">#</a> docker安装tomcat</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull tomcat:7-jre7
<span class="token function">docker</span> run <span class="token parameter variable">-di</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>demo_tomcat <span class="token parameter variable">-p</span> <span class="token number">9000</span>:8080 tomcat:7-jre7
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker安装elasticsearch" tabindex="-1"><a class="header-anchor" href="#docker安装elasticsearch" aria-hidden="true">#</a> docker安装elasticsearch</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拉取镜像</span>
<span class="token function">docker</span> pull elasticsearch:6.8.12
<span class="token comment"># 运行容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> demo_es <span class="token parameter variable">-p</span> <span class="token number">9200</span>:9200 <span class="token parameter variable">-p</span> <span class="token number">9300</span>:9300 <span class="token parameter variable">-e</span> <span class="token string">&quot;discovery.type=single-node&quot;</span> elasticsearch:6.8.12
<span class="token comment"># 验证</span>
<span class="token function">curl</span> <span class="token number">127.0</span>.0.1:9200
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker安装轻量级spug平台" tabindex="-1"><a class="header-anchor" href="#docker安装轻量级spug平台" aria-hidden="true">#</a> docker安装轻量级Spug平台</h2>`,6),y={href:"https://spug.dev/",target:"_blank",rel:"noopener noreferrer"},q=n("br",null,null,-1),j=n("br",null,null,-1),w=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拉取镜像</span>
<span class="token function">docker</span> pull registry.aliyuncs.com/openspug/spug
<span class="token comment"># 运行容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span><span class="token operator">=</span>spug <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 registry.aliyuncs.com/openspug/spug
<span class="token comment"># 初始化密码</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> spug init_spug root <span class="token number">123456</span>
<span class="token comment"># 重启容器</span>
<span class="token function">docker</span> restart spug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker安装jenkins" tabindex="-1"><a class="header-anchor" href="#docker安装jenkins" aria-hidden="true">#</a> docker安装jenkins</h2>`,2),E={href:"http://www.jenkins.io/",target:"_blank",rel:"noopener noreferrer"},S=n("br",null,null,-1),O=n("br",null,null,-1),R=n("br",null,null,-1),A=n("br",null,null,-1),D={href:"https://hub.docker.com/_/jenkins?tab=tag&page=1&ordering=last_updated",target:"_blank",rel:"noopener noreferrer"},M=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拉取镜像</span>
<span class="token function">docker</span> pull jenkins/jenkins:2.222.3-centos
<span class="token comment"># 映射本地数据卷的路径为/data/jenkins_home/</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/jenkins_home/
<span class="token comment"># 需要修改下目录权限，容器中jenkins用户的 uid 为 1000。</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> <span class="token number">1000</span>:1000 /data/jenkins_home/
<span class="token comment"># 运行容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> jenkins <span class="token parameter variable">-p</span> <span class="token number">8040</span>:8080 <span class="token parameter variable">-p</span> <span class="token number">50000</span>:50000 <span class="token parameter variable">-v</span> /data/jenkins_home:/var/jenkins_home jenkins/jenkins:2.222.3-centos
<span class="token comment"># 访问 http://192.16.18.151:8040 需要耐心等待jenkins启动</span>
<span class="token comment"># 查看管理员密码 下面两条命令，选择其一</span>
<span class="token function">cat</span> /data/jenkins_home/secrets/initialAdminPassword
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> jenkins <span class="token function">cat</span> /var/jenkins_home/secrets/initialAdminPassword
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker安装prometheus自动监控报警系统" tabindex="-1"><a class="header-anchor" href="#docker安装prometheus自动监控报警系统" aria-hidden="true">#</a> docker安装prometheus自动监控报警系统</h2>`,2),C={href:"https://prometheus.io/",target:"_blank",rel:"noopener noreferrer"},N=n("br",null,null,-1),V=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull prom/prometheus
<span class="token function">docker</span> pull grafana/grafana
<span class="token function">docker</span> pull prom/node-exporter
<span class="token function">docker</span> pull oliver006/redis_exporter

<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">9100</span>:9100 <span class="token parameter variable">-v</span> <span class="token string">&quot;/proc:/host/proc:ro&quot;</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;/sys:/host/sys:ro&quot;</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;/:/rootfs:ro&quot;</span> prom/node-exporter
<span class="token comment"># 访问 http://192.16.18.150:9100/metrics</span>

<span class="token function">mkdir</span> <span class="token parameter variable">-p</span>  /data/prometheus
<span class="token function">cat</span> <span class="token operator">&gt;</span>  /data/prometheus/prometheus.yml <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
global:
  scrape_interval:     60s
  evaluation_interval: 60s
# 这里表示抓取对象的配置
scrape_configs:
  - job_name: prometheus
    static_configs:
      - targets: [&#39;localhost:9090&#39;]
        labels:
          instance: prometheus
  - job_name: summer
    static_configs:
      - targets: [&#39;192.16.18.150:9100&#39;]
        labels:
          instance: summer
EOF</span>
<span class="token function">docker</span> run  <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">9090</span>:9090 <span class="token parameter variable">-v</span> /data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus
<span class="token comment"># 访问 http://192.16.18.150:9090</span>

<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/grafana/storage <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> <span class="token number">777</span> /data/grafana/storage
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">3000</span>:3000 <span class="token parameter variable">--name</span><span class="token operator">=</span>grafana <span class="token parameter variable">-v</span> /data/grafana/storage:/var/lib/grafana grafana/grafana
<span class="token comment"># 访问 http://192.16.18.150:3000 账号密码都是：admin</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker安装rancher" tabindex="-1"><a class="header-anchor" href="#docker安装rancher" aria-hidden="true">#</a> docker安装Rancher</h2>`,2),I={href:"https://rancher.com/docs/rancher/v1.6/zh/installing-rancher/installing-server/",target:"_blank",rel:"noopener noreferrer"},B=n("br",null,null,-1),K=n("br",null,null,-1),L=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拉取镜像</span>
<span class="token function">docker</span> pull rancher/rancher:v2.5-head
<span class="token comment"># 创建容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">-p</span> <span class="token number">443</span>:443 <span class="token parameter variable">--name</span> rancher <span class="token parameter variable">--privileged</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>unless-stopped <span class="token parameter variable">-d</span> rancher/rancher:v2.5-head

<span class="token function">curl</span> https://192.16.18.151
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker安装nacos" tabindex="-1"><a class="header-anchor" href="#docker安装nacos" aria-hidden="true">#</a> docker安装nacos</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">-p</span> <span class="token number">8848</span>:8848 <span class="token parameter variable">--env</span> <span class="token assign-left variable">MODE</span><span class="token operator">=</span>standalone  <span class="token parameter variable">--name</span> nacos  nacos/nacos-server:2.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3);function P(T,z){const e=i("router-link"),l=i("ExternalLinkIcon");return c(),p("div",null,[d(" more "),n("nav",u,[n("ul",null,[n("li",null,[s(e,{to:"#docker安装nginx"},{default:r(()=>[a("docker安装nginx")]),_:1})]),n("li",null,[s(e,{to:"#将容器制作为镜像"},{default:r(()=>[a("将容器制作为镜像")]),_:1})]),n("li",null,[s(e,{to:"#docker安装mysql"},{default:r(()=>[a("docker安装mysql")]),_:1})]),n("li",null,[s(e,{to:"#docker安装redis"},{default:r(()=>[a("docker安装redis")]),_:1})]),n("li",null,[s(e,{to:"#docker安装solr"},{default:r(()=>[a("docker安装solr")]),_:1})]),n("li",null,[s(e,{to:"#docker安装tomcat"},{default:r(()=>[a("docker安装tomcat")]),_:1})]),n("li",null,[s(e,{to:"#docker安装elasticsearch"},{default:r(()=>[a("docker安装elasticsearch")]),_:1})]),n("li",null,[s(e,{to:"#docker安装轻量级spug平台"},{default:r(()=>[a("docker安装轻量级Spug平台")]),_:1})]),n("li",null,[s(e,{to:"#docker安装jenkins"},{default:r(()=>[a("docker安装jenkins")]),_:1})]),n("li",null,[s(e,{to:"#docker安装prometheus自动监控报警系统"},{default:r(()=>[a("docker安装prometheus自动监控报警系统")]),_:1})]),n("li",null,[s(e,{to:"#docker安装rancher"},{default:r(()=>[a("docker安装Rancher")]),_:1})]),n("li",null,[s(e,{to:"#docker安装nacos"},{default:r(()=>[a("docker安装nacos")]),_:1})])])]),v,n("blockquote",null,[n("p",null,[a("官网地址："),n("a",k,[a("https://redis.io/"),s(l)]),b,h,a(" 镜像地址："),n("a",g,[a("https://hub.docker.com/_/redis?tab=tag&page=1&ordering=last_updated"),s(l)])])]),f,n("blockquote",null,[n("p",null,[a("官方文档："),n("a",_,[a("https://github.com/docker-solr/docker-solr/blob/master/README.md"),s(l)])])]),x,n("blockquote",null,[n("p",null,[a("官网地址："),n("a",y,[a("https://spug.dev/"),s(l)]),q,j,a(" Spug是面向中小型企业设计的轻量级无Agent的自动化运维平台，整合了主机管理、主机批量执行、主机在线终端、文件在线上传下载、应用发布部署、在线任务计划、配置中心、监控、报警等一系列功能。")])]),w,n("blockquote",null,[n("p",null,[a("官网地址："),n("a",E,[a("http://www.jenkins.io/"),s(l)]),S,O,a(" Jenkins是开源CI&CD软件领导者， 提供超过1000个插件来支持构建、部署、自动化， 满足任何项目的需要。"),R,A,a(" 镜像地址："),n("a",D,[a("https://hub.docker.com/_/jenkins?tab=tag&page=1&ordering=last_updated"),s(l)])])]),M,n("blockquote",null,[n("p",null,[a("官网地址："),n("a",C,[a("https://prometheus.io/"),s(l)]),N])]),V,n("p",null,[a("官方地址："),n("a",I,[a("https://rancher.com/docs/rancher/v1.6/zh/installing-rancher/installing-server/"),s(l)]),B,a(" K8S可视化管理工具Rancher"),K,a(" Rancher简化了使用K8S的流程，开发者可以随处运行K8S，满足IT需求规范，赋能DevOps团队。")]),L])}const $=o(m,[["render",P],["__file","22.docker容器实战.html.vue"]]);export{$ as default};
