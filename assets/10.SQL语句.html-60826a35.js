import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c,e as i,a as n,d as a,w as e,f as k,b as p}from"./app-d6438571.js";const r={},u=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"提示"),n("p",null,"SQL 是一种声明式语言，声明了一个你想从原始数据中获得什么样的结果的一个范例。")],-1),d={class:"table-of-contents"},m=k(`<h2 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建数据库</span>
<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> databaseName<span class="token punctuation">;</span>
<span class="token comment">-- 删除数据库</span>
<span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> databaseName<span class="token punctuation">;</span>
<span class="token comment">-- 进入数据库</span>
<span class="token keyword">use</span> databaseName<span class="token punctuation">;</span>
<span class="token comment">-- 创建新表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tabname<span class="token punctuation">(</span>col1 type1 <span class="token punctuation">[</span><span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">]</span><span class="token punctuation">,</span>col2 type2 <span class="token punctuation">[</span><span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 根据已有的表创建新表：</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tab_new <span class="token operator">like</span> tab_old <span class="token punctuation">(</span>使用旧表创建新表<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tab_new <span class="token keyword">as</span> <span class="token keyword">SELECT</span> col1<span class="token punctuation">,</span>col2… <span class="token keyword">FROM</span> tab_old definition only<span class="token punctuation">;</span>
<span class="token comment">-- 删除新表</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> tabname<span class="token punctuation">;</span>
<span class="token comment">-- 增加一个列</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> tabname <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> col <span class="token keyword">type</span><span class="token punctuation">;</span>
<span class="token comment">-- 添加主键</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> tabname <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 删除主键</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> tabname <span class="token keyword">DROP</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span>
<span class="token comment">-- 创建索引</span>
<span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token keyword">unique</span><span class="token punctuation">]</span> <span class="token keyword">index</span> idxname <span class="token keyword">ON</span> tabname<span class="token punctuation">(</span>col…<span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 删除索引，索引是不可更改的，想更改必须删除重新建。</span>
<span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> idxname<span class="token punctuation">;</span>
<span class="token comment">-- 创建视图</span>
<span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> viewname <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> statement<span class="token punctuation">;</span>
<span class="token comment">-- 删除视图</span>
<span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> viewname<span class="token punctuation">;</span>
<span class="token comment">-- 选择</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table1 <span class="token keyword">WHERE</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">-- 插入</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table1 <span class="token punctuation">(</span>field1<span class="token punctuation">,</span> field2<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>value1<span class="token punctuation">,</span> value2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 删除</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> table1 <span class="token keyword">WHERE</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">-- 查找</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table1 <span class="token keyword">WHERE</span> field1 <span class="token operator">LIKE</span> <span class="token string">&#39;%value1%&#39;</span><span class="token punctuation">;</span>
<span class="token comment">-- 排序</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table1 <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> field1<span class="token punctuation">,</span> field2<span class="token punctuation">[</span><span class="token keyword">desc</span><span class="token operator">|</span><span class="token keyword">ASC</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">-- 总数</span>
<span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> totalcount <span class="token keyword">FROM</span> table1<span class="token punctuation">;</span>
<span class="token comment">-- 求和</span>
<span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>field1<span class="token punctuation">)</span> <span class="token keyword">AS</span> sumvalue <span class="token keyword">FROM</span> table1<span class="token punctuation">;</span>
<span class="token comment">-- 平均</span>
<span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>field1<span class="token punctuation">)</span> <span class="token keyword">AS</span> avgvalue <span class="token keyword">FROM</span> table1<span class="token punctuation">;</span>
<span class="token comment">-- 最大</span>
<span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>field1<span class="token punctuation">)</span> <span class="token keyword">AS</span> maxvalue <span class="token keyword">FROM</span> table1<span class="token punctuation">;</span>
<span class="token comment">-- 最小</span>
<span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>field1<span class="token punctuation">)</span> <span class="token keyword">AS</span> minvalue <span class="token keyword">FROM</span> table1<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="高级查询运算词-union-并集-except-差集-intersect-交集" tabindex="-1"><a class="header-anchor" href="#高级查询运算词-union-并集-except-差集-intersect-交集" aria-hidden="true">#</a> 高级查询运算词：<code>UNION</code>（并集） <code>EXCEPT</code>（差集） <code>INTERSECT</code>（交集）</h6><h6 id="使用外连接-left-join-right-join-full-join" tabindex="-1"><a class="header-anchor" href="#使用外连接-left-join-right-join-full-join" aria-hidden="true">#</a> 使用外连接：<code>LEFT JOIN</code> <code>RIGHT JOIN</code> <code>FULL JOIN</code></h6><h6 id="分组-group-by-统计信息-cont-sum-max-min-avg" tabindex="-1"><a class="header-anchor" href="#分组-group-by-统计信息-cont-sum-max-min-avg" aria-hidden="true">#</a> 分组：<code>GROUP BY</code> ，统计信息 <code>CONT</code>,<code>SUM</code>,<code>MAX</code>,<code>MIN</code>,<code>AVG</code></h6><h6 id="排序-order-by-desc-asc" tabindex="-1"><a class="header-anchor" href="#排序-order-by-desc-asc" aria-hidden="true">#</a> 排序：<code>ORDER BY</code>，<code>DESC</code>|<code>ASC</code></h6><h2 id="提升" tabindex="-1"><a class="header-anchor" href="#提升" aria-hidden="true">#</a> 提升</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 显示文章、提交人和最后回复时间</span>
<span class="token keyword">SELECT</span> a<span class="token punctuation">.</span>title<span class="token punctuation">,</span> a<span class="token punctuation">.</span>username<span class="token punctuation">,</span> b<span class="token punctuation">.</span>adddate <span class="token keyword">FROM</span> <span class="token keyword">table</span> a<span class="token punctuation">,</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>adddate<span class="token punctuation">)</span> <span class="token keyword">AS</span> adddate <span class="token keyword">FROM</span> <span class="token keyword">table</span> <span class="token keyword">WHERE</span> <span class="token keyword">table</span><span class="token punctuation">.</span>title <span class="token operator">=</span> a<span class="token punctuation">.</span>title <span class="token punctuation">)</span> b<span class="token punctuation">;</span>
<span class="token comment">-- between的用法,between限制查询数据范围时包括了边界值,not between不包括</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table1 <span class="token keyword">WHERE</span> create_time <span class="token operator">BETWEEN</span> time1 <span class="token operator">AND</span> time2<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table1 <span class="token keyword">WHERE</span> create_time <span class="token operator">NOT</span> <span class="token operator">BETWEEN</span> time1 <span class="token operator">AND</span> time2<span class="token punctuation">;</span>
<span class="token comment">-- 两张关联表，删除主表中已经在副表中没有的信息</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> table1 <span class="token keyword">WHERE</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table2 <span class="token keyword">WHERE</span> able1<span class="token punctuation">.</span>field1 <span class="token operator">=</span> table2<span class="token punctuation">.</span>field1 <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 产生0到100间的随机数</span>
<span class="token keyword">SELECT</span> FLOOR<span class="token punctuation">(</span>RAND<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- md5()产生32位随机字符串</span>
<span class="token keyword">SELECT</span> MD5<span class="token punctuation">(</span>RAND<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 当前时间戳</span>
<span class="token keyword">SELECT</span> UNIX_TIMESTAMP<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
<span class="token comment">-- 当前时间</span>
<span class="token keyword">SELECT</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> FROM_UNIXTIME<span class="token punctuation">(</span>UNIX_TIMESTAMP<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> CONCAT<span class="token punctuation">(</span>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span>CURTIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 相差2天</span>
<span class="token keyword">select</span> datediff<span class="token punctuation">(</span><span class="token string">&#39;2018-03-22 09:00:00&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2018-03-20 07:00:00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 5天(5小时/5分钟/5秒)之内创建的数据</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tableName <span class="token keyword">WHERE</span> TIMESTAMPDIFF<span class="token punctuation">(</span><span class="token keyword">DAY</span><span class="token punctuation">,</span>created_at<span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tableName <span class="token keyword">WHERE</span> TIMESTAMPDIFF<span class="token punctuation">(</span><span class="token keyword">HOUR</span><span class="token punctuation">,</span>created_at<span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tableName <span class="token keyword">WHERE</span> TIMESTAMPDIFF<span class="token punctuation">(</span><span class="token keyword">MINUTE</span><span class="token punctuation">,</span>created_at<span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tableName <span class="token keyword">WHERE</span> TIMESTAMPDIFF<span class="token punctuation">(</span><span class="token keyword">SECOND</span><span class="token punctuation">,</span>created_at<span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="技巧" tabindex="-1"><a class="header-anchor" href="#技巧" aria-hidden="true">#</a> 技巧</h2><ul><li>1=1 和 1=2</li><li>导出 database</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span> <span class="token parameter variable">--databases</span> databasename <span class="token operator">&gt;</span> sql.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>导入 sql 文件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span> <span class="token parameter variable">-D</span> databasename <span class="token operator">&lt;</span> sql.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>替换字段中的空格</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> users <span class="token keyword">SET</span> full_name <span class="token operator">=</span> <span class="token keyword">replace</span><span class="token punctuation">(</span>full_name<span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="数据开发-经典" tabindex="-1"><a class="header-anchor" href="#数据开发-经典" aria-hidden="true">#</a> 数据开发-经典</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 按姓氏笔画排序,从少到多</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> TableName <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> CustomerName <span class="token keyword">COLLATE</span> Chinese_PRC_Stroke_ci_as<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="性能优化" tabindex="-1"><a class="header-anchor" href="#性能优化" aria-hidden="true">#</a> 性能优化</h2><h6 id="sql-执行顺序" tabindex="-1"><a class="header-anchor" href="#sql-执行顺序" aria-hidden="true">#</a> SQL 执行顺序</h6><div class="language-flow line-numbers-mode" data-ext="flow"><pre class="language-flow"><code>stage1<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> <span class="token constant">FROM</span>
stage2<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> <span class="token constant">ON</span>
stage3<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> <span class="token constant">JOIN</span>
stage4<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> <span class="token constant">WHERE</span>
stage5<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> <span class="token constant">GROUP</span> <span class="token constant">BY</span>
stage6<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> <span class="token constant">HAVING</span>
stage7<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> <span class="token constant">SELECT</span>
stage8<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> <span class="token constant">DISTINCT</span>
stage9<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> <span class="token constant">ORDER</span> <span class="token constant">BY</span>
stage10<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> <span class="token constant">LIMIT</span>

<span class="token function">stage1</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">stage2</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">stage3</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">stage4</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">stage5</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">stage6</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">stage7</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">stage8</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">stage9</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">stage10</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="sql-原则" tabindex="-1"><a class="header-anchor" href="#sql-原则" aria-hidden="true">#</a> SQL 原则</h6><ul><li><p>FROM 后面的表关联，是自右向左解析的.尽量把数据量大的表放在最右边来进行关联。</p></li><li><p>WHERE 条件的解析顺序是自下而上的,能筛选出大量数据的条件放在 WHERE 语句的最下面。</p></li><li><p>避免全表扫描:</p><ol><li>WHERE order by 字段创建索引</li><li>null 用 0 替代</li><li>避免使用!= &lt;&gt;</li><li>union all 替换 or</li><li>避免使用 in 和 not in 尽量使用 between and</li><li>避免模糊查询</li><li>使用 exists 替代 in exists 查询效率更好</li><li>子查询中不要包含 ORDER BY 子句</li></ol></li><li><p>尽量使用数字类型</p></li><li><p>优化 distinct 使用 group by</p></li><li><p>尽量避免 WHERE =左边的函数处理</p></li><li><p>F5 看执行计划 修改 cost 为个位数或十位数</p></li><li><p>子查询要放在比较操作符的右边</p></li><li><p>不要对索引字段进行格式转换</p></li><li><p>不要对索引字段使用函数</p></li><li><p>在 IN 后面值的列表中，将出现最频繁的值放在最前面，出现得最少的放在最后面，减少判断的次数</p></li><li><p>需创建索引</p><ol><li>列中数据值分布范围很广</li><li>列中包含大量空值</li><li>列经常在 WHERE 子句或连接条件中出现</li><li>表经常被访问而且数据量很大，访问的数据大概占数据总量的 2%到 4%</li></ol></li><li><p>不要创建索引</p><ol><li>表很小</li><li>列不经常作为连接条件或出现在 WHERE 子句中</li><li>查询的数据大于 2%到 4%</li><li>表经常更新</li><li>加索引的列包含在表达式中</li></ol></li></ul>`,22);function v(b,E){const s=o("router-link");return l(),c("div",null,[u,i(" more "),n("nav",d,[n("ul",null,[n("li",null,[a(s,{to:"#基础"},{default:e(()=>[p("基础")]),_:1})]),n("li",null,[a(s,{to:"#提升"},{default:e(()=>[p("提升")]),_:1})]),n("li",null,[a(s,{to:"#技巧"},{default:e(()=>[p("技巧")]),_:1})]),n("li",null,[a(s,{to:"#数据开发-经典"},{default:e(()=>[p("数据开发-经典")]),_:1})]),n("li",null,[a(s,{to:"#性能优化"},{default:e(()=>[p("性能优化")]),_:1})])])]),m])}const h=t(r,[["render",v],["__file","10.SQL语句.html.vue"]]);export{h as default};
