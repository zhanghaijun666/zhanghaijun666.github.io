import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,f as e}from"./app-d6438571.js";const t={},p=e(`<blockquote><p>本文介绍【Mybatis-plus】updateById()方法不能更新字段为null的原因及解决办法。</p></blockquote><h2 id="一、问题描述" tabindex="-1"><a class="header-anchor" href="#一、问题描述" aria-hidden="true">#</a> 一、问题描述</h2><blockquote><p>在日常项目开发过程中，经常会使用MybatisPlus的<code>updateById()</code>方法，快速将接收到的参数或者查询结果中原本不为null的字段更新为null，并且该字段在数据库中可为null，这个时候使用updateById()并不能实现这个操作，不会报错，但是对应的字段并没有更新为null。</p></blockquote><h2 id="二、问题原因" tabindex="-1"><a class="header-anchor" href="#二、问题原因" aria-hidden="true">#</a> 二、问题原因</h2><p>Mybatis-plus的字段策略（FieldStrategy）有三种策略：</p><ul><li><strong>IGNORED</strong>：0 忽略</li><li><strong>NOT_NULL</strong>：1 非 NULL，默认策略</li><li><strong>NOT_EMPTY</strong>：2 非空</li></ul><p>而默认的更新策略是NOT_NULL：非NULL; 即通过接口更新数据时数据为NULL值时将不更新进数据库。</p><h2 id="三、解决方案" tabindex="-1"><a class="header-anchor" href="#三、解决方案" aria-hidden="true">#</a> 三、解决方案</h2><h3 id="_1-直接在mapper-xml中写sql" tabindex="-1"><a class="header-anchor" href="#_1-直接在mapper-xml中写sql" aria-hidden="true">#</a> 1. 直接在mapper.xml中写sql</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> table_demo <span class="token keyword">SET</span> 字段a <span class="token operator">=</span> <span class="token boolean">null</span> <span class="token keyword">WHERE</span> 字段b <span class="token operator">=</span> 条件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-全局配置field-strategy-不推荐" tabindex="-1"><a class="header-anchor" href="#_2-全局配置field-strategy-不推荐" aria-hidden="true">#</a> 2. 全局配置field-strategy (不推荐)</h3><p>在配置文件中修改全局策略</p><p>properties文件格式：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">### properties 文件格式</span>
<span class="token key attr-name">mybatis-plus.global-config.db-config.field-strategy</span><span class="token punctuation">=</span><span class="token value attr-value">ignored</span>
<span class="token comment">### yml 文件格式</span>
<span class="token key attr-name">mybatis-plus</span><span class="token punctuation">:</span>
<span class="token key attr-name">  global-config</span><span class="token punctuation">:</span>
<span class="token comment">    ## 字段策略 0:&quot;忽略判断&quot;, 1:&quot;非 NULL 判断&quot;, 2:&quot;非空判断&quot;</span>
<span class="token key attr-name">    field-strategy</span><span class="token punctuation">:</span> <span class="token value attr-value">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样做是进行全局配置，在更新时会忽略对所有字段的判断。但是如果一些字段没有传值过来，会被直接更新为null，可能会影响其它业务数据的准确性。不推荐使用此方法。</p><h3 id="_3-单独配置field-strategy" tabindex="-1"><a class="header-anchor" href="#_3-单独配置field-strategy" aria-hidden="true">#</a> 3. 单独配置field-strategy</h3><p>根据具体情况，在需要更新的字段中调整验证注解，如验非空：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>strategy<span class="token operator">=</span><span class="token class-name">FieldStrategy</span><span class="token punctuation">.</span><span class="token constant">NOT_EMPTY</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样的话，我们只需要在需要更新为null的字段上，设置忽略策略，如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>updateStrategy <span class="token operator">=</span> <span class="token class-name">FieldStrategy</span><span class="token punctuation">.</span><span class="token constant">IGNORED</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> updateBy<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置好了之后，在更新时就可以直接使用mybatisPlus中的<code>updateById</code>方法就可以成功将字段更新为null,但是这样做存在一定的弊端，就是当需要这样处理的字段比较多时，要给对应的字段都要添加上这样的注解。</p><h3 id="_4-结合updatewrapper方式更新-推荐" tabindex="-1"><a class="header-anchor" href="#_4-结合updatewrapper方式更新-推荐" aria-hidden="true">#</a> 4. 结合UpdateWrapper方式更新 (推荐)</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">User</span> user<span class="token operator">=</span>userService<span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span>userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>user<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    userService<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">UpdateWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lambda</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
               <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUserName</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span>
               <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span>user<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这种方法不会影响其它方法，不需要修改全局配置，也不需要在字段上单独加注解，</p><p>只需要在使用的时候设置一下要修改的字段为null就可以更新成功，推荐使用方法4。</p></blockquote>`,24),l=[p];function o(c,i){return n(),s("div",null,l)}const d=a(t,[["render",o],["__file","21.MybatisPlus更新Null字段.html.vue"]]);export{d as default};
