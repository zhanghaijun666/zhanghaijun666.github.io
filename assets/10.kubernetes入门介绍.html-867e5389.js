import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o,c as i,a as t,b as e,d as n,e as c,w as r,f as p}from"./app-d6438571.js";const u="/assets/k8s-cluter-d55235b7.png",b="/assets/kubenretes架构图-eb28a0e4.jpg",h={},m={href:"https://www.cnblogs.com/jhno1/p/15269065.html",target:"_blank",rel:"noopener noreferrer"},k={class:"table-of-contents"},v=t("h2",{id:"kubernetes基本概述",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#kubernetes基本概述","aria-hidden":"true"},"#"),e(" Kubernetes基本概述")],-1),f={href:"https://kubernetes.io/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/",target:"_blank",rel:"noopener noreferrer"},g={href:"http://docs.kubernetes.org.cn/230.html",target:"_blank",rel:"noopener noreferrer"},x=p('<blockquote><p><code>kubernetes</code>，简称 <code>K8s</code>，是用 8 代替 8 个字符“ubernete”而成的缩写。</p><p>是一个开源的，用于管理云平台中多个主机上的容器化的应用，Kubernetes的目标是让部署容器化的应用简单并且高效，Kubernetes 提供了应用部署，规划，更新，维护的一种机制。</p><p><code>Kubernetes</code> 是 <code>Google</code> 开源的一个容器编排引擎，它支持自动化部署、大规模可伸缩、应用容器化管理。</p><p><code>Kubernetes</code> 是一个可移植的、可扩展的开源平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。</p><p><code>Kubernetes</code> 拥有一个庞大且快速增长的生态系统。Kubernetes 的服务、支持和工具广泛可用。</p></blockquote><h2 id="kubernetes-功能" tabindex="-1"><a class="header-anchor" href="#kubernetes-功能" aria-hidden="true">#</a> kubernetes 功能</h2><ul><li><p>1.自动装箱</p><p>基于容器对应用运行环境的资源配置要求自动部署应用容器</p></li><li><p>2.自我修复(自愈能力)</p><p>当容器失败时，会对容器进行重启<br> 当所部署的 Node 节点有问题时，会对容器进行重新部署和重新调度<br> 当容器未通过监控检查时，会关闭此容器直到容器正常运行时，才会对外提供服务</p></li><li><p>3.水平扩展</p><p>通过简单的命令、用户 UI 界面或基于 CPU 等资源使用情况，对应用容器进行规模扩大或规模剪裁</p></li><li><p>4.服务发现</p><p>用户不需使用额外的服务发现机制，就能够基于 Kubernetes 自身能力实现服务发现和负载均衡</p></li><li><p>5.滚动更新</p><p>可以根据应用的变化，对应用容器运行的应用，进行一次性或批量式更新</p></li><li><p>6.版本回退</p><p>可以根据应用部署情况，对应用容器运行的应用，进行历史版本即时回退</p></li><li><p>7.密钥和配置管理</p><p>在不需要重新构建镜像的情况下，可以部署和更新密钥和应用配置，类似热部署。</p></li><li><p>8.存储编排</p><p>自动实现存储系统挂载及应用，特别对有状态应用实现数据持久化非常重要</p><p>存储系统可以来自于本地目录、网络存储(NFS、Gluster、Ceph 等)、公共云存储服务</p></li><li><p>9.批处理</p><p>提供一次性任务，定时任务；满足批量数据处理和分析的场景</p></li></ul><h2 id="集群架构" tabindex="-1"><a class="header-anchor" href="#集群架构" aria-hidden="true">#</a> 集群架构</h2><blockquote><p>Kubernetes 遵循非常传统的客户端服务端架构，客户端通过 RESTful 接口或者直接使用 kubectl 与 Kubernetes 集群进行通信，</p></blockquote><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="master" tabindex="-1"><a class="header-anchor" href="#master" aria-hidden="true">#</a> Master</h3><blockquote><p>它主要负责接收客户端的请求，安排容器的执行并且运行控制循环，将集群的状态向目标状态进行迁移，Master 节点内部由三个组件构成:</p></blockquote><ul><li><ol><li>API Server</li></ol><p>负责处理来自用户的请求，其主要作用就是对外提供 RESTful 的接口，包括用于查看集群状态的读请求以及改变集群状态的写请求，也是唯一一个与 etcd 集群通信的组件。</p></li><li><ol start="2"><li>ControllerController</li></ol><p>管理器运行了一系列的控制器进程，这些进程会按照用户的期望状态在后台不断地调节整个集群中的对象，当服务的状态发生了改变，控制器就会发现这个改变并且开始向目标状态迁移。</p></li><li><ol start="3"><li>SchedulerScheduler</li></ol><p>调度器其实为 Kubernetes 中运行的 Pod 选择部署的 Worker 节点，它会根据用户的需要选择最能满足请求的节点来运行 Pod，它会在每次需要调度 Pod 时执行。</p></li></ul><h3 id="worker" tabindex="-1"><a class="header-anchor" href="#worker" aria-hidden="true">#</a> Worker</h3><blockquote><p>Node节点实现相对简单一点，主要是由kubelet和kube-proxy两部分组成：</p></blockquote><figure><img src="'+b+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="k8s-资源指令" tabindex="-1"><a class="header-anchor" href="#k8s-资源指令" aria-hidden="true">#</a> k8s 资源指令</h2><ul><li>基础操作</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建且运行一个pod</span>
<span class="token comment"># deployment、rs、pod被自动创建</span>
kubectl run my-nginx <span class="token parameter variable">--image</span><span class="token operator">=</span>nginx <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">80</span>
<span class="token comment"># 增加创建副本数量</span>
kubectl scale deployment/my-nginx <span class="token parameter variable">--replicas</span> <span class="token operator">=</span> <span class="token number">3</span>
<span class="token comment"># 添加service</span>
<span class="token comment"># kubectl expose将RC、Service、Deployment或Pod作为新的Kubernetes Service公开。</span>
kubectl expose deployment/my-nginx <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">30000</span> --target-port<span class="token operator">=</span><span class="token number">80</span>
<span class="token comment"># 编辑service配置文件</span>
kubectl edit svc/my-nginx

<span class="token comment"># 其他的基础指令</span>
<span class="token comment"># 查看集群中有几个Node</span>
kubectl get nodes
<span class="token comment"># 查看pod</span>
kubectl  get pods
<span class="token comment"># 查看服务详情信息</span>
kubectl describe pod my-nginx-379829228-cwlbb
<span class="token comment"># 查看已部署</span>
kubectl  get deployments
<span class="token comment"># 删除pod</span>
kubectl delete pod my-nginx-379829228-cwlbb
<span class="token comment"># 删除部署的my-nginx服务。彻底删除pod</span>
kubectl delete deployment my-nginx
<span class="token comment"># 删除service服务</span>
kubectl delete <span class="token function">service</span> my-nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>命令手册<br><br> kubenetes 命令手册，详情请查询下表：</li></ul><h3 id="基础命令" tabindex="-1"><a class="header-anchor" href="#基础命令" aria-hidden="true">#</a> 基础命令</h3><table><thead><tr><th>类型</th><th>命令</th></tr></thead><tbody><tr><td>create</td><td>通过文件名或标准输入创建资源</td></tr><tr><td>ecpose</td><td>将一个资源公开为一个新的 Service</td></tr><tr><td>run</td><td>在集群中运行一个特定的镜像</td></tr><tr><td>set</td><td>在对象上设置特定的功能</td></tr><tr><td>get</td><td>显示一个或多个资源</td></tr><tr><td>explain</td><td>文档参考资料</td></tr><tr><td>edit</td><td>使用默认的编辑器编辑一个资源</td></tr><tr><td>delete</td><td>通过文件名，标准输入，资源名称或者标签选择器来删除资源</td></tr><tr><td>部署命令</td><td>rollout</td></tr><tr><td>rolling-update</td><td>对给定的复制控制器滚动更新</td></tr><tr><td>scale</td><td>扩容会缩容 Pod 数量，Deployment，ReplicaSet，RC 或 Job</td></tr><tr><td>autoscale</td><td>创建一个自动选择扩容或缩容并设置 Pod 数量</td></tr></tbody></table><h3 id="集群管理命令" tabindex="-1"><a class="header-anchor" href="#集群管理命令" aria-hidden="true">#</a> 集群管理命令</h3><table><thead><tr><th>类型</th><th>命令</th></tr></thead><tbody><tr><td>certificate</td><td>修改证书资源</td></tr><tr><td>cluster-info</td><td>显示集群信息</td></tr><tr><td>top</td><td>显示资源（CPU/Memory/Storage)使用，需要 Heapster 运行</td></tr><tr><td>cordon</td><td>标记节点不可调</td></tr><tr><td>uncordon</td><td>标记节点可调度</td></tr><tr><td>drain</td><td>驱逐节点上的应用，准备下线维护</td></tr><tr><td>taint</td><td>修改节点 taint 标记</td></tr></tbody></table><h2 id="故障诊断和调试命令" tabindex="-1"><a class="header-anchor" href="#故障诊断和调试命令" aria-hidden="true">#</a> 故障诊断和调试命令</h2><table><thead><tr><th>类型</th><th>命令</th></tr></thead><tbody><tr><td>describe</td><td>显示特定资源或资源组的详细信息</td></tr><tr><td>logs</td><td>在一个 Pod 中打印一个容器日志，如果 Pod 只有一个容器，容器名称是可选的</td></tr><tr><td>attach</td><td>附加到一个运行的容器</td></tr><tr><td>exec</td><td>执行命令到容器</td></tr><tr><td>port-forward</td><td>转发一个或多个本地端口到一个 pod</td></tr><tr><td>proxy</td><td>运行一个 proxy 到 Kubernetes API server</td></tr><tr><td>cp</td><td>拷贝文件或者目录到容器中</td></tr><tr><td>auth</td><td>检查授权</td></tr></tbody></table><h3 id="高级命令" tabindex="-1"><a class="header-anchor" href="#高级命令" aria-hidden="true">#</a> 高级命令</h3><table><thead><tr><th>类型</th><th>命令</th></tr></thead><tbody><tr><td>apply</td><td>通过文件名或标准输入对资源应用配置</td></tr><tr><td>patch</td><td>使用补丁修改，更新资源的字段</td></tr><tr><td>replace</td><td>通过文件名或标准输入替换一个资源</td></tr><tr><td>convert</td><td>不同的 API 版本之间转换配置文件</td></tr></tbody></table><h3 id="设置命令" tabindex="-1"><a class="header-anchor" href="#设置命令" aria-hidden="true">#</a> 设置命令</h3><table><thead><tr><th>类型</th><th>命令</th></tr></thead><tbody><tr><td>label</td><td>更新资源上的标签</td></tr><tr><td>annotate</td><td>更新资源上的注释</td></tr><tr><td>completion</td><td>用于实现 kubectl 工具自动补全</td></tr></tbody></table><h3 id="其他命令" tabindex="-1"><a class="header-anchor" href="#其他命令" aria-hidden="true">#</a> 其他命令</h3><table><thead><tr><th>类型</th><th>命令</th></tr></thead><tbody><tr><td>api-versions</td><td>打印受支持的 API 版本</td></tr><tr><td>config</td><td>修改 kubeconfig 文件（用于访问 API，比如配置认证信息）</td></tr><tr><td>help</td><td>所有命令帮助</td></tr><tr><td>plugin</td><td>运行一个命令插件</td></tr><tr><td>version</td><td>打印客户端和服务版本信息</td></tr></tbody></table>`,28);function y(w,K){const a=l("ExternalLinkIcon"),d=l("router-link");return o(),i("div",null,[t("p",null,[e("文章地址："),t("a",m,[e("https://www.cnblogs.com/jhno1/p/15269065.html"),n(a)])]),c(" more "),t("nav",k,[t("ul",null,[t("li",null,[n(d,{to:"#kubernetes基本概述"},{default:r(()=>[e("Kubernetes基本概述")]),_:1})]),t("li",null,[n(d,{to:"#kubernetes-功能"},{default:r(()=>[e("kubernetes 功能")]),_:1})]),t("li",null,[n(d,{to:"#集群架构"},{default:r(()=>[e("集群架构")]),_:1}),t("ul",null,[t("li",null,[n(d,{to:"#master"},{default:r(()=>[e("Master")]),_:1})]),t("li",null,[n(d,{to:"#worker"},{default:r(()=>[e("Worker")]),_:1})])])]),t("li",null,[n(d,{to:"#k8s-资源指令"},{default:r(()=>[e("k8s 资源指令")]),_:1}),t("ul",null,[t("li",null,[n(d,{to:"#基础命令"},{default:r(()=>[e("基础命令")]),_:1})]),t("li",null,[n(d,{to:"#集群管理命令"},{default:r(()=>[e("集群管理命令")]),_:1})])])]),t("li",null,[n(d,{to:"#故障诊断和调试命令"},{default:r(()=>[e("故障诊断和调试命令")]),_:1}),t("ul",null,[t("li",null,[n(d,{to:"#高级命令"},{default:r(()=>[e("高级命令")]),_:1})]),t("li",null,[n(d,{to:"#设置命令"},{default:r(()=>[e("设置命令")]),_:1})]),t("li",null,[n(d,{to:"#其他命令"},{default:r(()=>[e("其他命令")]),_:1})])])])])]),v,t("ul",null,[t("li",null,[t("a",f,[e("kubernetes 官网"),n(a)])]),t("li",null,[t("a",_,[e("文档"),n(a)])]),t("li",null,[t("a",g,[e("中文文档"),n(a)])])]),x])}const C=s(h,[["render",y],["__file","10.kubernetes入门介绍.html.vue"]]);export{C as default};
