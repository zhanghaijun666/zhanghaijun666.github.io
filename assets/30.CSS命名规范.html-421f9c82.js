const e=JSON.parse('{"key":"v-1c95b192","path":"/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/11.CSSS/30.CSS%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83.html","title":"CSS命名规范","lang":"zh-CN","frontmatter":{"title":"CSS命名规范","date":"2023-11-22T00:00:00.000Z","category":["编程技巧","CSSS"],"tag":["CSSS"],"description":"CSS 的命名，采用 BEM 命名规范，可以有效的避免组件间样式的相互污染，减少嵌套层级。具体规则如下： BEM 是什么? BEM 使用分隔符将类名区隔成三个部分： [prefix]-[block]__[element]--[modifier] prefix：全局的前缀，这里指代表 tdesign 的前缀，也就是 t- Block(块) ：组件的最外层父元素，这个类包含最通用和可重用的功能。 Element(元素) ：组件内可包含一个或多个元素，元素为块添加了新功能。无需重置任何属性。 Modifier(修饰类) ：块或元素都可以通过修饰词来表示为变体。","head":[["meta",{"property":"og:url","content":"https://haijunit.top/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/11.CSSS/30.CSS%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"CSS命名规范"}],["meta",{"property":"og:description","content":"CSS 的命名，采用 BEM 命名规范，可以有效的避免组件间样式的相互污染，减少嵌套层级。具体规则如下： BEM 是什么? BEM 使用分隔符将类名区隔成三个部分： [prefix]-[block]__[element]--[modifier] prefix：全局的前缀，这里指代表 tdesign 的前缀，也就是 t- Block(块) ：组件的最外层父元素，这个类包含最通用和可重用的功能。 Element(元素) ：组件内可包含一个或多个元素，元素为块添加了新功能。无需重置任何属性。 Modifier(修饰类) ：块或元素都可以通过修饰词来表示为变体。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-22T08:31:44.000Z"}],["meta",{"property":"article:author","content":"知识库"}],["meta",{"property":"article:tag","content":"CSSS"}],["meta",{"property":"article:published_time","content":"2023-11-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-22T08:31:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS命名规范\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-22T08:31:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"知识库\\",\\"url\\":\\"https://haijunit.top\\",\\"email\\":\\"zhanghaijun_java@163.com\\"}]}"]]},"headers":[{"level":2,"title":"BEM 是什么?","slug":"bem-是什么","link":"#bem-是什么","children":[]},{"level":2,"title":"BEM 的特点","slug":"bem-的特点","link":"#bem-的特点","children":[]},{"level":2,"title":"BEM 命名规则","slug":"bem-命名规则","link":"#bem-命名规则","children":[{"level":3,"title":"1. 无元素和修饰类的块","slug":"_1-无元素和修饰类的块","link":"#_1-无元素和修饰类的块","children":[]},{"level":3,"title":"2. 含简单修饰类的组件","slug":"_2-含简单修饰类的组件","link":"#_2-含简单修饰类的组件","children":[]},{"level":3,"title":"3. 含元素的组件","slug":"_3-含元素的组件","link":"#_3-含元素的组件","children":[]},{"level":3,"title":"4. 含修饰类的元素","slug":"_4-含修饰类的元素","link":"#_4-含修饰类的元素","children":[]},{"level":3,"title":"5. 基于组件修饰类调整元素样式","slug":"_5-基于组件修饰类调整元素样式","link":"#_5-基于组件修饰类调整元素样式","children":[]},{"level":3,"title":"6. 类名含有多个单词怎么办？","slug":"_6-类名含有多个单词怎么办","link":"#_6-类名含有多个单词怎么办","children":[]},{"level":3,"title":"7. 如何表示组件状态？","slug":"_7-如何表示组件状态","link":"#_7-如何表示组件状态","children":[]}]},{"level":2,"title":"组件命名","slug":"组件命名","link":"#组件命名","children":[{"level":3,"title":"常见状态类名","slug":"常见状态类名","link":"#常见状态类名","children":[]}]}],"git":{"createdTime":1700641904000,"updatedTime":1700641904000,"contributors":[{"name":"zhanghaijun","email":"zhanghaijun@bjtxra.com","commits":1}]},"readingTime":{"minutes":4.61,"words":1384},"filePathRelative":"30.编程技巧/11.CSSS/30.CSS命名规范.md","localizedDate":"2023年11月22日","excerpt":"<p>CSS 的命名，采用 <a href=\\"http://getbem.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">BEM</a> 命名规范，可以有效的避免组件间样式的相互污染，减少嵌套层级。具体规则如下：</p>\\n<h2> BEM 是什么?</h2>\\n<p>BEM 使用分隔符将类名区隔成三个部分：</p>\\n<p>[prefix]-[block]__[element]--[modifier]</p>\\n<ul>\\n<li><strong>prefix</strong>：全局的前缀，这里指代表 tdesign 的前缀，也就是 t-</li>\\n<li><strong>Block(块)</strong> ：组件的最外层父元素，这个类包含最通用和可重用的功能。</li>\\n<li><strong>Element(元素)</strong> ：组件内可包含一个或多个元素，元素为块添加了新功能。无需重置任何属性。</li>\\n<li><strong>Modifier(修饰类)</strong> ：块或元素都可以通过修饰词来表示为变体。</li>\\n</ul>","autoDesc":true}');export{e as data};
