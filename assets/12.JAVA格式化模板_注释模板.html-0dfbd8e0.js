import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as c,c as p,a,b as n,d as o,f as s}from"./app-d6438571.js";const l={},d=s(`<h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1 背景</h2><ul><li>本文意在将idea中的<code>代码格式</code>和<code>注释格式</code>进行统一化。</li><li>研发团队的成员的代码格式和注释格式<code>建议统一化</code>。</li><li>统一的<code>代码格式</code>和<code>注释格式</code>，能给代码阅读上带来极大的便利，给代码改动上提高极大的效率。</li></ul><h2 id="_2-注释模板" tabindex="-1"><a class="header-anchor" href="#_2-注释模板" aria-hidden="true">#</a> 2 注释模板</h2><h3 id="_1-类模板样例" tabindex="-1"><a class="header-anchor" href="#_1-类模板样例" aria-hidden="true">#</a> （1）类模板样例</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/** 
 * （自定义类描述）
 * <span class="token keyword">@author</span> dong.zhao
 * <span class="token keyword">@date</span> 2023/03/21 21:00
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-方法模板样例" tabindex="-1"><a class="header-anchor" href="#_2-方法模板样例" aria-hidden="true">#</a> （2）方法模板样例</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * （自定义方法描述）
 * <span class="token keyword">@author</span> dong.zhao
 * <span class="token keyword">@date</span> 2023/03/21 21:00
 * <span class="token keyword">@param</span> <span class="token parameter">message</span>
 * <span class="token keyword">@param</span> <span class="token parameter">name</span>
 * <span class="token keyword">@return</span> java.lang.String
 */</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myTest</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-无参方法模板样例" tabindex="-1"><a class="header-anchor" href="#_3-无参方法模板样例" aria-hidden="true">#</a> （3）无参方法模板样例</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * （自定义方法描述）
 * <span class="token keyword">@author</span> dong.zhao
 * <span class="token keyword">@date</span> 2023/03/21 21:02
 * <span class="token keyword">@return</span> java.lang.String 
 */</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-下载模板文件" tabindex="-1"><a class="header-anchor" href="#_3-下载模板文件" aria-hidden="true">#</a> 3 下载模板文件</h2>`,10),r={href:"https://github.com/alibaba/p3c/tree/master/p3c-formatter",target:"_blank",rel:"noopener noreferrer"},u=s(`<p>下载如下两个模板文件（链接为下载页面）：</p><ul><li>代码格式（用于代码<code>格式化</code>）：<code>eclipse-codestyle.xml</code></li><li>代码模板（代码<code>注释模板</code>，<code>IDEA中无法使用</code>）：<code>eclipse-codetemplate.xml</code></li></ul><h2 id="_4-idea代码格式化" tabindex="-1"><a class="header-anchor" href="#_4-idea代码格式化" aria-hidden="true">#</a> 4 IDEA代码格式化</h2><blockquote><p>因阿里提供的代码格式化配置是<code>基于eclipse</code>的，如需在<code>idea</code>中使用此配置，需要安装对应的<code>eclipse插件</code>。</p></blockquote><h3 id="_1-安装插件" tabindex="-1"><a class="header-anchor" href="#_1-安装插件" aria-hidden="true">#</a> （1）安装插件</h3><blockquote><p>阿里配置文件是针对<code>ecplice</code>的，在<code>IDE</code>中，所有的配置文件导入，需要安装<code>Eclipse Code Formatter</code>插件。</p></blockquote><h3 id="_2-配置代码格式" tabindex="-1"><a class="header-anchor" href="#_2-配置代码格式" aria-hidden="true">#</a> （2） 配置代码格式</h3><p><code>File</code>-&gt;<code>Settings</code>-&gt;<code>Other Settings</code>-&gt;<code>Eclipse Code Formatter</code>进行idea代码格式配置：</p><p>将代码格式化文件<code>eclipse-codestyle.xml</code>，配置到插件中：</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/7OPxOA8ic5mibdA1yL8uFDeGiaZcibAWNMb7SAy85gRkMmJg6JrTM75apacx7iaz0Y3VD5f7y503Omg5jWgaxDVgibyg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h3 id="_3-使用格式化" tabindex="-1"><a class="header-anchor" href="#_3-使用格式化" aria-hidden="true">#</a> （3） 使用格式化</h3><ul><li>格式化部分代码</li></ul><blockquote><p>选中<code>需要格式化的</code>代码，快捷键：<code>ctrl+alt+L</code></p></blockquote><ul><li>格式化整个文件</li></ul><blockquote><p>在需要格式化的文件中，快捷键：<code>ctrl+alt+L</code></p></blockquote><ul><li>格式化整个项目（慎用）</li></ul><blockquote><p>idea中，项目上<code>右键</code>-&gt;<code>Reformat Code</code></p></blockquote><p>如已经存在的项目初次使用统一的代码格式化，建议在一个时间点将整个项目统一进行一次代码格式化。避免单独的格式化，导致部分研发人员的代码合并出现严重冲突。</p><h2 id="_5-idea代码注释配置" tabindex="-1"><a class="header-anchor" href="#_5-idea代码注释配置" aria-hidden="true">#</a> 5 IDEA代码注释配置</h2><h3 id="_1-配置全局中user" tabindex="-1"><a class="header-anchor" href="#_1-配置全局中user" aria-hidden="true">#</a> （1）配置全局中USER</h3><p>在此配置全局USER，用于填充自动生成的注释中的<code>作者</code>@author属性。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Help</span>\`<span class="token operator">-&gt;</span>\`<span class="token class-name">Edit</span> <span class="token class-name">Custom</span> <span class="token constant">VM</span> <span class="token class-name">Options</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>增加如下配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">-</span><span class="token class-name">Duser</span><span class="token punctuation">.</span>name<span class="token operator">=</span>dong<span class="token punctuation">.</span>zhao
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-配置类注释模板" tabindex="-1"><a class="header-anchor" href="#_2-配置类注释模板" aria-hidden="true">#</a> （2） 配置类注释模板</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>settings\`<span class="token operator">-&gt;</span>\`<span class="token class-name">Editor</span>\`<span class="token operator">-&gt;</span>\`<span class="token class-name">File</span> and <span class="token class-name">Code</span> <span class="token class-name">Templates</span>\`<span class="token operator">-&gt;</span>\`files\`<span class="token operator">-&gt;</span>\`<span class="token keyword">class</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/7OPxOA8ic5mibdA1yL8uFDeGiaZcibAWNMb71rbxsVFrlsaWTtKUhXt46tCDR38ZXHTCMw7rnLeOQgJv7L4qLCZPwQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>增加注释模板：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * $<span class="token punctuation">{</span>description<span class="token punctuation">}</span>
 * <span class="token keyword">@author</span> $<span class="token punctuation">{</span>USER<span class="token punctuation">}</span>
 * <span class="token keyword">@date</span> $<span class="token punctuation">{</span>YEAR<span class="token punctuation">}</span>/$<span class="token punctuation">{</span>MONTH<span class="token punctuation">}</span>/$<span class="token punctuation">{</span>DAY<span class="token punctuation">}</span> $<span class="token punctuation">{</span>HOUR<span class="token punctuation">}</span>:$<span class="token punctuation">{</span>MINUTE<span class="token punctuation">}</span>
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模板增加后，如下（<code>注释上方的换行符必须有</code>）：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>#<span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">{</span><span class="token constant">PACKAGE_NAME</span><span class="token punctuation">}</span> <span class="token operator">&amp;&amp;</span> $<span class="token punctuation">{</span><span class="token constant">PACKAGE_NAME</span><span class="token punctuation">}</span> <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token keyword">package</span> $<span class="token punctuation">{</span><span class="token constant">PACKAGE_NAME</span><span class="token punctuation">}</span><span class="token punctuation">;</span>#end
#<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;File Header.java&quot;</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * $<span class="token punctuation">{</span>description<span class="token punctuation">}</span>
 * <span class="token keyword">@author</span> $<span class="token punctuation">{</span>USER<span class="token punctuation">}</span>
 * <span class="token keyword">@date</span> $<span class="token punctuation">{</span>YEAR<span class="token punctuation">}</span>/$<span class="token punctuation">{</span>MONTH<span class="token punctuation">}</span>/$<span class="token punctuation">{</span>DAY<span class="token punctuation">}</span> $<span class="token punctuation">{</span>HOUR<span class="token punctuation">}</span>:$<span class="token punctuation">{</span>MINUTE<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> $<span class="token punctuation">{</span><span class="token constant">NAME</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新创建java文件时，会提示输入类描述<code>description</code>，生成的文件格式如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 我的测试类
 * <span class="token keyword">@author</span> dong.zhao
 * <span class="token keyword">@date</span> 2023/03/21 21:00
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-配置方法注释" tabindex="-1"><a class="header-anchor" href="#_3-配置方法注释" aria-hidden="true">#</a> （3）配置方法注释</h3><h4 id="_5-3-1-配置流程" tabindex="-1"><a class="header-anchor" href="#_5-3-1-配置流程" aria-hidden="true">#</a> 5.3.1 配置流程</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\`<span class="token class-name">Editor</span>\`<span class="token operator">-&gt;</span>\`<span class="token class-name">Live</span> <span class="token class-name">Template</span>\`<span class="token operator">-&gt;</span>\`java\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>新建Live Template，进行如下配置：</p></blockquote><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/7OPxOA8ic5mibdA1yL8uFDeGiaZcibAWNMb7GMvNkpp6deMngabo6YG9e2b8Smem6AbUkEvNASLUb6MqBFw8c027Lg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><blockquote><p>第5步，适用场景配置如下：</p></blockquote><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/7OPxOA8ic5mibdA1yL8uFDeGiaZcibAWNMb7bzT942LPlzJYwMNIb9Fj2G5sCdgbibcjFCTBKGhpG78MHUPMqrHicpyQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><blockquote><p>第6步，模板变量配置如下：</p></blockquote><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/7OPxOA8ic5mibdA1yL8uFDeGiaZcibAWNMb7M82Vicy7C0qUhKxDb8NyzIQ7uDJphPF4ObZc6Fibbx3HZuqmAxHFxxxQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h4 id="_5-3-2-配置参数" tabindex="-1"><a class="header-anchor" href="#_5-3-2-配置参数" aria-hidden="true">#</a> 5.3.2 配置参数</h4><p>（1）模板配置</p><p>配置如下：</p><p>缩写Abbreviation：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>模板Template text：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> $user$
 * <span class="token keyword">@date</span> $data$$time$$param$
 * <span class="token keyword">@return</span> $return$
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）变量配置</p><p>user：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>date：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy/MM/dd&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>time：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&quot;HH:mm&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>param：</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code><span class="token function">groovyScript</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;if(\\&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression"><span class="token number">_1</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\&quot;.length() == 2) {return &#39;&#39;;} else {def result=&#39;&#39;; def params=\\&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression"><span class="token number">_1</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\&quot;.replaceAll(&#39;[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]&#39;, &#39;&#39;).split(&#39;,&#39;).toList();for(i = 0; i &lt; params.size(); i++) {result+=&#39;\\\\n&#39; + &#39; * @param &#39; + params[i] + &#39; &#39;}; return result;}&quot;</span></span><span class="token punctuation">,</span> <span class="token function">methodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>return：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">methodReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-3-3-使用" tabindex="-1"><a class="header-anchor" href="#_5-3-3-使用" aria-hidden="true">#</a> 5.3.3 使用</h4><p>在java方法上输入<code>/**</code>后，按下<code>tab</code>键，即可在方法上方生成<code>方法注释</code>，如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * （①方法描述）
 * <span class="token keyword">@author</span> dong.zhao
 * <span class="token keyword">@date</span> 2023/03/21 21:00
 * <span class="token keyword">@param</span> <span class="token parameter">message</span> （②参数描述）
 * <span class="token keyword">@param</span> <span class="token parameter">name</span> （②参数描述）
 * <span class="token keyword">@return</span> java.lang.String （③返回值描述）
 */</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myTest</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依次填写：</p><p>①方法描述<br> ②参数描述<br> ③返回值描述</p><h4 id="_5-3-4-注意事项" tabindex="-1"><a class="header-anchor" href="#_5-3-4-注意事项" aria-hidden="true">#</a> 5.3.4 注意事项</h4><p>（1）为避免对变量注释时的影响，变量的注释仍然采用默认的注释方式：<code>/**</code>+<code>回车</code>，生成的注释仍然是默认注释：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/** */</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）无参方法，将不生成<code>@param</code>参数：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 
 * <span class="token keyword">@author</span> dong.zhao
 * <span class="token keyword">@date</span> 2023/03/21 21:00
 * <span class="token keyword">@return</span> java.lang.String 
 */</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-补充-关于类注释" tabindex="-1"><a class="header-anchor" href="#_4-补充-关于类注释" aria-hidden="true">#</a> （4） 补充（关于类注释）</h3><p>5.2中，配置的类注释模板，需要在<code>创建类</code>的时候，<code>才可以生成类注释</code>。对于拷贝过来的类文件，或者已经存在的类文件，无法加上对应注释。</p><p>因此，可以参照<code>5.3</code>，进行代码模板配置。<img src="https://mmbiz.qpic.cn/mmbiz_png/7OPxOA8ic5mibdA1yL8uFDeGiaZcibAWNMb7jdficUHXs5vZ6HvIGHhtWMjicC3JhowbpNqJG66Llgl1EqdTZ6QCiavaA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"></p><p>其中的<code>5 适用场景</code>同4.3.1：<img src="https://mmbiz.qpic.cn/mmbiz_png/7OPxOA8ic5mibdA1yL8uFDeGiaZcibAWNMb7bzT942LPlzJYwMNIb9Fj2G5sCdgbibcjFCTBKGhpG78MHUPMqrHicpyQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"></p><h4 id="_5-4-1-配置参数" tabindex="-1"><a class="header-anchor" href="#_5-4-1-配置参数" aria-hidden="true">#</a> 5.4.1 配置参数</h4><p>（1）模板配置</p><p>配置如下：</p><p>缩写Abbreviation：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>cc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>模板Template text：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 *
 * <span class="token keyword">@author</span> $user$
 * <span class="token keyword">@date</span> $date$ $time$
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）变量配置</p><p>user：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>date：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy/MM/dd&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>time：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&quot;HH:mm&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>description：</p><p>不配置</p><h4 id="_5-4-2-使用" tabindex="-1"><a class="header-anchor" href="#_5-4-2-使用" aria-hidden="true">#</a> 5.4.2 使用</h4><p>在<code>类上</code>输入<code>cc</code>后，按下<code>回车</code>键，即可在方法上方生成<code>类注释</code>，如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * （①类描述）
 * <span class="token keyword">@author</span> dong.zhao
 * <span class="token keyword">@date</span> 2023/03/21 21:00
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>填写：</p><p>①类描述</p>`,95);function m(v,k){const e=t("ExternalLinkIcon");return c(),p("div",null,[d,a("p",null,[n("阿里模板下载地址: "),a("a",r,[n("https://github.com/alibaba/p3c/tree/master/p3c-formatter"),o(e)])]),u])}const h=i(l,[["render",m],["__file","12.JAVA格式化模板_注释模板.html.vue"]]);export{h as default};
