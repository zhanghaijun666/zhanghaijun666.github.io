import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as c,c as u,e as r,a as n,d as a,w as t,b as s,f as i}from"./app-d6438571.js";const d={},k=n("blockquote",null,[n("p",null,"Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。")],-1),m={class:"table-of-contents"},v=i('<h2 id="go-语言特色" tabindex="-1"><a class="header-anchor" href="#go-语言特色" aria-hidden="true">#</a> Go 语言特色</h2><ul><li>简洁、快速、安全</li><li>并行、有趣、开源</li><li>内存管理、数组安全、编译迅速</li></ul><h2 id="go-语言用途" tabindex="-1"><a class="header-anchor" href="#go-语言用途" aria-hidden="true">#</a> Go 语言用途</h2><blockquote><p>对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。</p></blockquote><h2 id="下载软件包" tabindex="-1"><a class="header-anchor" href="#下载软件包" aria-hidden="true">#</a> 下载软件包</h2>',5),b={href:"https://go.dev/dl/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://golang.google.cn/dl/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://go.dev/dl/go1.19.windows-amd64.msi",target:"_blank",rel:"noopener noreferrer"},f={href:"https://go.dev/dl/go1.19.linux-amd64.tar.gz",target:"_blank",rel:"noopener noreferrer"},_={href:"https://go.dev/dl/go1.19.darwin-amd64.pkg",target:"_blank",rel:"noopener noreferrer"},q={href:"https://pkslow.oss-cn-shenzhen.aliyuncs.com/images/2020/08/go-setup.download-page.png",target:"_blank",rel:"noopener noreferrer"},x=n("img",{src:"https://pkslow.oss-cn-shenzhen.aliyuncs.com/images/2020/08/go-setup.download-page.png",alt:"img",tabindex:"0",loading:"lazy"},null,-1),w=n("figcaption",null,"img",-1),P=i(`<h2 id="设置环境变量" tabindex="-1"><a class="header-anchor" href="#设置环境变量" aria-hidden="true">#</a> 设置环境变量</h2><ul><li>windows <blockquote><p>setx /m GO_HOME D:\\windows\\software\\Go</p><p>将<code>%GO_HOME%/bin</code>配置到环境变量<code>PATH</code>中</p><p>go version</p></blockquote></li><li>linux</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /etc/profile <span class="token operator">&lt;&lt;</span><span class="token string">EOF
export GO_HOME=/usr/local/lib/go
export GOPATH=\\<span class="token environment constant">$HOME</span>/go
export PATH=\\<span class="token environment constant">$PATH</span>:\\<span class="token variable">$GO_HOME</span>/bin:\\<span class="token variable">$GOPATH</span>/bin
EOF</span>
<span class="token comment"># 配置生效</span>
<span class="token builtin class-name">source</span> /etc/profile
<span class="token comment">## 查看go版本</span>
go version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试程序" tabindex="-1"><a class="header-anchor" href="#测试程序" aria-hidden="true">#</a> 测试程序</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> hello.go <span class="token operator">&lt;&lt;</span><span class="token string">EOF
package main

import (
 &quot;fmt&quot;
 &quot;os&quot;
)

func main() {
 fmt.Println(&quot;Hello world!&quot;)

 dir, _ := os.Executable()
 fmt.Println(dir)
}
EOF</span>
<span class="token comment">## 运行程序</span>
go run hello.go
<span class="token comment">## 在当前目录下生成hello.exe 执行hello.exe即可</span>
go build hello.go
<span class="token comment">## 在全局目录下生成hello.exe 可任何目录执行hello.exe</span>
go <span class="token function">install</span> hello.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="补充" tabindex="-1"><a class="header-anchor" href="#补充" aria-hidden="true">#</a> 补充</h2><blockquote><p>windows 下建议<code>cmder</code>来替代<code>cmd</code></p><p>Go 编码开发工具：<code>Goland</code>、<code>lietIDE</code>、<code>Visual Studio Code + Go插件</code>、<code>IntelliJ + Go 插件</code></p><p>常用工具：<code>https://github.com/golang/tools.git</code>、<code>https://github.com/golang/lint.git</code></p></blockquote><h2 id="格式化输出" tabindex="-1"><a class="header-anchor" href="#格式化输出" aria-hidden="true">#</a> 格式化输出</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;            占位输出：%v, %+v, %#v \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;            类型输出：%T \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span>

  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;          二进制输出：%b \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;          八进制输出：%o \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;          十进制输出：%d \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;       5位十进制输出：%5d \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;5位十进制输出（补0）：%05d \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;    十六进制小写输出：%x \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;    十六进制大写输出：%X \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span>

  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;        unicode 码值：%c \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;            转义输出：%q \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;     unicode格式输出：%U \\n&quot;</span><span class="token punctuation">,</span> <span class="token char">&#39;一&#39;</span><span class="token punctuation">)</span>

  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;无小数部分、二进制指数的科学计数法：%b \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123.123456</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;                     有2位小数部分：%.2f \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123.125456</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;         有6位小数部分的科学计数法：%.6e \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123.123456</span><span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;                        科学计数法：%E \\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123.123456</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="godoc-安装" tabindex="-1"><a class="header-anchor" href="#godoc-安装" aria-hidden="true">#</a> godoc 安装</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go <span class="token function">env</span>
<span class="token comment">## 设置env</span>
go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GO111MODULE</span><span class="token operator">=</span>auto
go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.io,direct
go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn,direct
go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://proxy.golang.org,direct
<span class="token comment">## 安装</span>
go get golang.org/x/tools/cmd/godoc
<span class="token comment">## 访问\`http://localhost:8080\`即可</span>
godoc <span class="token parameter variable">-http</span><span class="token operator">=</span>:8080
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function O(G,E){const e=l("router-link"),o=l("ExternalLinkIcon");return c(),u("div",null,[k,r(" more "),n("nav",m,[n("ul",null,[n("li",null,[a(e,{to:"#go-语言特色"},{default:t(()=>[s("Go 语言特色")]),_:1})]),n("li",null,[a(e,{to:"#go-语言用途"},{default:t(()=>[s("Go 语言用途")]),_:1})]),n("li",null,[a(e,{to:"#下载软件包"},{default:t(()=>[s("下载软件包")]),_:1})]),n("li",null,[a(e,{to:"#设置环境变量"},{default:t(()=>[s("设置环境变量")]),_:1})]),n("li",null,[a(e,{to:"#测试程序"},{default:t(()=>[s("测试程序")]),_:1})]),n("li",null,[a(e,{to:"#补充"},{default:t(()=>[s("补充")]),_:1})]),n("li",null,[a(e,{to:"#格式化输出"},{default:t(()=>[s("格式化输出")]),_:1})]),n("li",null,[a(e,{to:"#godoc-安装"},{default:t(()=>[s("godoc 安装")]),_:1})])])]),v,n("blockquote",null,[n("p",null,[s("下载地址："),n("a",b,[s("https://go.dev/dl/"),a(o)])]),n("p",null,[s("下载地址："),n("a",g,[s("https://golang.google.cn/dl/"),a(o)])]),n("p",null,[s("windows: "),n("a",h,[s("https://go.dev/dl/go1.19.windows-amd64.msi"),a(o)])]),n("p",null,[s("linux："),n("a",f,[s("https://go.dev/dl/go1.19.linux-amd64.tar.gz"),a(o)])]),n("p",null,[s("macOS："),n("a",_,[s("https://go.dev/dl/go1.19.darwin-amd64.pkg"),a(o)])])]),n("figure",null,[n("a",q,[x,a(o)]),w]),P])}const T=p(d,[["render",O],["__file","10.Go语言安装.html.vue"]]);export{T as default};
