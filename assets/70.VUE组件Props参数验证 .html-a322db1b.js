const e=JSON.parse('{"key":"v-60c6102d","path":"/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/15.VUE%E5%BA%94%E7%94%A8/70.VUE%E7%BB%84%E4%BB%B6Props%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81%20.html","title":"VUE组件Props参数验证","lang":"zh-CN","frontmatter":{"title":"VUE组件Props参数验证","date":"2023-05-14T00:00:00.000Z","category":["编程技巧","VUE应用"],"tag":["VUE应用"],"description":"Vue 要求将传递给组件的任何数据显式声明为 props。此外，它还提供了一个强大的内置机制来验证这些数据。这就像组件和消费者之间的合同一样，确保组件按预期使用。 让我们来探讨一下这个强大的工具，它可以帮助我们在开发和调试过程中减少错误并增加我们的信心。 一、基础知识 1.1 原始类型 验证原始类型就像为原始类型构造函数设置类型选项一样简单。 export default { props: { // Basic type check // (`null` and `undefined` values will allow any type) propA: Number, // Multiple possible types propB: [String, Number], // Required string propC: { type: String, required: true }, // Number with a default value propD: { type: Number, default: 100 }, } }","head":[["meta",{"property":"og:url","content":"https://haijunit.top/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/15.VUE%E5%BA%94%E7%94%A8/70.VUE%E7%BB%84%E4%BB%B6Props%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81%20.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"VUE组件Props参数验证"}],["meta",{"property":"og:description","content":"Vue 要求将传递给组件的任何数据显式声明为 props。此外，它还提供了一个强大的内置机制来验证这些数据。这就像组件和消费者之间的合同一样，确保组件按预期使用。 让我们来探讨一下这个强大的工具，它可以帮助我们在开发和调试过程中减少错误并增加我们的信心。 一、基础知识 1.1 原始类型 验证原始类型就像为原始类型构造函数设置类型选项一样简单。 export default { props: { // Basic type check // (`null` and `undefined` values will allow any type) propA: Number, // Multiple possible types propB: [String, Number], // Required string propC: { type: String, required: true }, // Number with a default value propD: { type: Number, default: 100 }, } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-23T07:13:54.000Z"}],["meta",{"property":"article:author","content":"知识库"}],["meta",{"property":"article:tag","content":"VUE应用"}],["meta",{"property":"article:published_time","content":"2023-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-23T07:13:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"VUE组件Props参数验证\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-23T07:13:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"知识库\\",\\"url\\":\\"https://haijunit.top\\",\\"email\\":\\"zhanghaijun_java@163.com\\"}]}"]]},"headers":[{"level":2,"title":"一、基础知识","slug":"一、基础知识","link":"#一、基础知识","children":[{"level":3,"title":"1.1 原始类型","slug":"_1-1-原始类型","link":"#_1-1-原始类型","children":[]},{"level":3,"title":"1.2 复杂类型","slug":"_1-2-复杂类型","link":"#_1-2-复杂类型","children":[]}]},{"level":2,"title":"二、高级验证","slug":"二、高级验证","link":"#二、高级验证","children":[{"level":3,"title":"2.1 验证器函数","slug":"_2-1-验证器函数","link":"#_2-1-验证器函数","children":[]}]},{"level":2,"title":"2.2 使用枚举","slug":"_2-2-使用枚举","link":"#_2-2-使用枚举","children":[{"level":3,"title":"2.3 布尔型投射","slug":"_2-3-布尔型投射","link":"#_2-3-布尔型投射","children":[]}]},{"level":2,"title":"三、TypeScript","slug":"三、typescript","link":"#三、typescript","children":[{"level":3,"title":"3.1 Interfaces","slug":"_3-1-interfaces","link":"#_3-1-interfaces","children":[]},{"level":3,"title":"3.2 真实枚举","slug":"_3-2-真实枚举","link":"#_3-2-真实枚举","children":[]}]},{"level":2,"title":"四、Vue 3","slug":"四、vue-3","link":"#四、vue-3","children":[]},{"level":2,"title":"结束","slug":"结束","link":"#结束","children":[]}],"git":{"createdTime":1684826034000,"updatedTime":1684826034000,"contributors":[{"name":"zhanghaijun","email":"zhanghaijun@bjtxra.com","commits":1}]},"readingTime":{"minutes":4.02,"words":1205},"filePathRelative":"30.编程技巧/15.VUE应用/70.VUE组件Props参数验证 .md","localizedDate":"2023年5月14日","excerpt":"<p>Vue 要求将传递给组件的任何数据显式声明为 props。此外，它还提供了一个强大的内置机制来验证这些数据。这就像组件和消费者之间的合同一样，确保组件按预期使用。</p>\\n<p>让我们来探讨一下这个强大的工具，它可以帮助我们在开发和调试过程中减少错误并增加我们的信心。</p>\\n<h2> 一、基础知识</h2>\\n<h3> 1.1 原始类型</h3>\\n<p>验证原始类型就像为原始类型构造函数设置类型选项一样简单。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">props</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// Basic type check</span>\\n    <span class=\\"token comment\\">//  (`null` and `undefined` values will allow any type)</span>\\n    <span class=\\"token literal-property property\\">propA</span><span class=\\"token operator\\">:</span> Number<span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token comment\\">// Multiple possible types</span>\\n    <span class=\\"token literal-property property\\">propB</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>String<span class=\\"token punctuation\\">,</span> Number<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token comment\\">// Required string</span>\\n    <span class=\\"token literal-property property\\">propC</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token literal-property property\\">type</span><span class=\\"token operator\\">:</span> String<span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token literal-property property\\">required</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token comment\\">// Number with a default value</span>\\n    <span class=\\"token literal-property property\\">propD</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token literal-property property\\">type</span><span class=\\"token operator\\">:</span> Number<span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token keyword\\">default</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">100</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
