import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o,c,e as i,a as s,d as a,w as e,f as r,b as t}from"./app-d6438571.js";const d={},u={class:"table-of-contents"},k=r(`<h2 id="_1-sed处理" tabindex="-1"><a class="header-anchor" href="#_1-sed处理" aria-hidden="true">#</a> 1. sed处理</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 多个空格只保留一个</span>
<span class="token function">sed</span> <span class="token string">&#39;/./,/^$/!d&#39;</span> <span class="token builtin class-name">test</span>
<span class="token comment">## 删除开头的空白行</span>
<span class="token function">sed</span> <span class="token string">&#39;/./,$!d&#39;</span> <span class="token builtin class-name">test</span>
<span class="token comment">## 删除结尾的空白行</span>
<span class="token function">sed</span> <span class="token string">&#39;{:start/^\\n*$/{$d; N; b start}}&#39;</span> <span class="token builtin class-name">test</span>
<span class="token comment">## 替换单独的单词</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;The System Administrator manual&quot;</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;s/\\(System\\) Administrator/\\1 user/&#39;</span>
<span class="token comment">## 在长数字中插入逗号</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;1234567&quot;</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;{:start; s/\\(.*[0-9]\\)\\([0-9]\\{3\\}\\)/\\1,\\2/; t start}&#39;</span>
<span class="token comment">## 给文件中的行编号</span>
<span class="token function">sed</span> <span class="token string">&#39;=&#39;</span> <span class="token builtin class-name">test</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;N; s/\\n/ /&#39;</span>
<span class="token comment">## 将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot;</span>
<span class="token function">sed</span> <span class="token string">&#39;s/stringa1/stringa2/g&#39;</span> example.txt 
<span class="token comment">## 从example.txt文件中删除所有空白行</span>
<span class="token function">sed</span> <span class="token string">&#39;/^$/d&#39;</span> example.txt 
<span class="token comment">## 从example.txt文件中删除所有注释和空白行</span>
<span class="token function">sed</span> <span class="token string">&#39;/ *#/d; /^$/d&#39;</span> example.txt 
<span class="token comment">## 从文件example.txt 中排除第一行</span>
<span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;1d&#39;</span> result.txt 
<span class="token comment">## 查看只包含词汇 &quot;string1&quot;的行</span>
<span class="token function">sed</span> <span class="token parameter variable">-n</span> <span class="token string">&#39;/stringa1/p&#39;</span> 
<span class="token comment">## 删除每一行最后的空白字符</span>
<span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/ *$//&#39;</span> example.txt 
<span class="token comment">## 从文档中只删除词汇 &quot;string1&quot; 并保留剩余全部</span>
<span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/stringa1//g&#39;</span> example.txt 
<span class="token comment">## 查看从第一行到第5行内容</span>
<span class="token function">sed</span> <span class="token parameter variable">-n</span> <span class="token string">&#39;1,5p;5q&#39;</span> example.txt 
<span class="token comment">## 查看第5行</span>
<span class="token function">sed</span> <span class="token parameter variable">-n</span> <span class="token string">&#39;5p;5q&#39;</span> example.txt 
<span class="token comment">## 用单个零替换多个零</span>
<span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/00*/0/g&#39;</span> example.txt 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-文件" tabindex="-1"><a class="header-anchor" href="#_2-文件" aria-hidden="true">#</a> 2. 文件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 删除0字节文件</span>
<span class="token function">find</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-size</span> <span class="token number">0</span> <span class="token parameter variable">-exec</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
<span class="token comment">## sed移除空白行</span>
<span class="token function">sed</span> <span class="token string">&#39;/^$/d&#39;</span> <span class="token function">file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-查看进程" tabindex="-1"><a class="header-anchor" href="#_3-查看进程" aria-hidden="true">#</a> 3. 查看进程</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 按内存从大到小排列</span>
PS <span class="token parameter variable">-e</span> <span class="token parameter variable">-o</span> <span class="token string">&quot;%C : %p : %z : %a&quot;</span><span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-k5</span> <span class="token parameter variable">-nr</span>
<span class="token comment">## 进程总数</span>
<span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span>
<span class="token comment">## 清除僵死进程</span>
<span class="token function">ps</span> <span class="token parameter variable">-eal</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ if ($2 == &quot;Z&quot;) {print $4}}&#39;</span> <span class="token operator">|</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span>
<span class="token function">ps</span> <span class="token parameter variable">-al</span> <span class="token operator">|</span> <span class="token function">gawk</span> <span class="token string">&#39;{print $2,$4}&#39;</span> <span class="token operator">|</span> <span class="token function">grep</span> Z

<span class="token comment">## 打开文件数目</span>
<span class="token function">lsof</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span>
<span class="token comment">## 杀掉80端口相关的进程</span>
<span class="token function">lsof</span> <span class="token parameter variable">-i</span> :80<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;ID&quot;</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print &quot;kill -9&quot;,$2}&#39;</span><span class="token operator">|</span><span class="token function">sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-资源消耗" tabindex="-1"><a class="header-anchor" href="#_4-资源消耗" aria-hidden="true">#</a> 4. 资源消耗</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## CPU负载</span>
<span class="token function">cat</span> /proc/loadavg
<span class="token comment">## CPU 利用率</span>
<span class="token function">ps</span> <span class="token parameter variable">-e</span> <span class="token parameter variable">-o</span> <span class="token string">&quot;%C : %p : %z : %a&quot;</span><span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-nr</span>

<span class="token comment">## 内存的大小</span>
<span class="token function">free</span> <span class="token parameter variable">-m</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">&quot;Mem&quot;</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span>

<span class="token comment">## 磁盘空间</span>
<span class="token function">df</span> <span class="token parameter variable">-h</span>
<span class="token function">du</span> <span class="token parameter variable">-cks</span> * <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-rn</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-网络" tabindex="-1"><a class="header-anchor" href="#_5-网络" aria-hidden="true">#</a> 5. 网络</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 取 IP 地址</span>
<span class="token function">ifconfig</span> eth0 <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">&quot;inet addr:&quot;</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">6</span> 或者ifconfig <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&#39;inet addr:&#39;</span><span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&#39;127.0.0.1&#39;</span> <span class="token operator">|</span> <span class="token function">cut</span> -d: <span class="token parameter variable">-f2</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $1}&#39;</span>

<span class="token comment">## 查看 http 的并发请求数及其 TCP 连接状态</span>
<span class="token function">netstat</span> <span class="token parameter variable">-n</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}&#39;</span>
<span class="token function">netstat</span> <span class="token parameter variable">-an</span> <span class="token parameter variable">-t</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;:80&quot;</span> <span class="token operator">|</span> <span class="token function">grep</span> ESTABLISHED <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{printf &quot;%s %s\\n&quot;,$5,$6}&#39;</span> <span class="token operator">|</span> <span class="token function">sort</span>
<span class="token comment">## 网络连接数目</span>
<span class="token function">netstat</span> <span class="token parameter variable">-an</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">&quot;^(tcp)&quot;</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">68</span><span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token parameter variable">-c</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-n</span>
<span class="token comment">## 查看有多少个活动的 php-cgi 进程</span>
<span class="token function">netstat</span> <span class="token parameter variable">-anp</span> <span class="token operator">|</span> <span class="token function">grep</span> php-cgi <span class="token operator">|</span> <span class="token function">grep</span> ^tcp <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-tcpdump-抓包-用来防止80端口被人攻击时可以分析数据" tabindex="-1"><a class="header-anchor" href="#_6-tcpdump-抓包-用来防止80端口被人攻击时可以分析数据" aria-hidden="true">#</a> 6. tcpdump 抓包，用来防止80端口被人攻击时可以分析数据</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>tcpdump <span class="token parameter variable">-c</span> <span class="token number">10000</span> <span class="token parameter variable">-i</span> eth0 <span class="token parameter variable">-n</span> dst port <span class="token number">80</span> <span class="token operator">&gt;</span> /root/pkts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_7-查看系统自启动的服务" tabindex="-1"><a class="header-anchor" href="#_7-查看系统自启动的服务" aria-hidden="true">#</a> 7. 查看系统自启动的服务</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chkconfig</span> <span class="token parameter variable">--list</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{if ($5==&quot;3:on&quot;) print $1}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,14);function m(v,b){const n=l("router-link");return o(),c("div",null,[i(" more "),s("nav",u,[s("ul",null,[s("li",null,[a(n,{to:"#_1-sed处理"},{default:e(()=>[t("1. sed处理")]),_:1})]),s("li",null,[a(n,{to:"#_2-文件"},{default:e(()=>[t("2. 文件")]),_:1})]),s("li",null,[a(n,{to:"#_3-查看进程"},{default:e(()=>[t("3. 查看进程")]),_:1})]),s("li",null,[a(n,{to:"#_4-资源消耗"},{default:e(()=>[t("4. 资源消耗")]),_:1})]),s("li",null,[a(n,{to:"#_5-网络"},{default:e(()=>[t("5. 网络")]),_:1})]),s("li",null,[a(n,{to:"#_6-tcpdump-抓包-用来防止80端口被人攻击时可以分析数据"},{default:e(()=>[t("6. tcpdump 抓包，用来防止80端口被人攻击时可以分析数据")]),_:1})]),s("li",null,[a(n,{to:"#_7-查看系统自启动的服务"},{default:e(()=>[t("7. 查看系统自启动的服务")]),_:1})])])]),k])}const h=p(d,[["render",m],["__file","16.常用命令总结.html.vue"]]);export{h as default};
