const n=JSON.parse(`{"key":"v-593f1f3e","path":"/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/30.Python/31.%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%BA%E4%BA%8B%E7%B3%BB%E7%BB%9F.html","title":"简单的人事系统","lang":"zh-CN","frontmatter":{"title":"简单的人事系统","date":"2023-02-27T00:00:00.000Z","category":["编程技巧","Python"],"tag":["Python"],"description":"脚本 import streamlit as st import pandas as pd # 创建员工类 class Employee: def __init__(self, name, age, position): self.name = name self.age = age self.position = position # 创建员工列表 employee_list = [] # 添加员工函数 def add_employee(name, age, position): employee = Employee(name, age, position) employee_list.append(employee) # 显示员工列表函数 def show_employee_list(): if len(employee_list) == 0: st.write('员工列表为空！') else: df = pd.DataFrame([[e.name, e.age, e.position] for e in employee_list], columns=['姓名', '年龄', '职位']) st.dataframe(df) # 添加员工界面 def add_employee_page(): st.write('添加新员工') name = st.text_input('姓名') age = st.number_input('年龄', min_value=0, max_value=100) position = st.text_input('职位') if st.button('添加'): add_employee(name, age, position) st.success('添加成功！') # 显示员工列表界面 def show_employee_list_page(): st.write('员工列表') show_employee_list() # 主程序 def main(): st.title('人事系统') menu = ['添加员工', '员工列表'] choice = st.sidebar.selectbox('选择菜单', menu) if choice == '添加员工': add_employee_page() elif choice == '员工列表': show_employee_list_page() if __name__ == '__main__': main()","head":[["meta",{"property":"og:url","content":"https://haijunit.top/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/30.Python/31.%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%BA%E4%BA%8B%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"简单的人事系统"}],["meta",{"property":"og:description","content":"脚本 import streamlit as st import pandas as pd # 创建员工类 class Employee: def __init__(self, name, age, position): self.name = name self.age = age self.position = position # 创建员工列表 employee_list = [] # 添加员工函数 def add_employee(name, age, position): employee = Employee(name, age, position) employee_list.append(employee) # 显示员工列表函数 def show_employee_list(): if len(employee_list) == 0: st.write('员工列表为空！') else: df = pd.DataFrame([[e.name, e.age, e.position] for e in employee_list], columns=['姓名', '年龄', '职位']) st.dataframe(df) # 添加员工界面 def add_employee_page(): st.write('添加新员工') name = st.text_input('姓名') age = st.number_input('年龄', min_value=0, max_value=100) position = st.text_input('职位') if st.button('添加'): add_employee(name, age, position) st.success('添加成功！') # 显示员工列表界面 def show_employee_list_page(): st.write('员工列表') show_employee_list() # 主程序 def main(): st.title('人事系统') menu = ['添加员工', '员工列表'] choice = st.sidebar.selectbox('选择菜单', menu) if choice == '添加员工': add_employee_page() elif choice == '员工列表': show_employee_list_page() if __name__ == '__main__': main()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-23T07:13:54.000Z"}],["meta",{"property":"article:author","content":"知识库"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:published_time","content":"2023-02-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-23T07:13:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"简单的人事系统\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-23T07:13:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"知识库\\",\\"url\\":\\"https://haijunit.top\\",\\"email\\":\\"zhanghaijun_java@163.com\\"}]}"]]},"headers":[{"level":2,"title":"脚本","slug":"脚本","link":"#脚本","children":[]}],"git":{"createdTime":1684826034000,"updatedTime":1684826034000,"contributors":[{"name":"zhanghaijun","email":"zhanghaijun@bjtxra.com","commits":1}]},"readingTime":{"minutes":0.74,"words":222},"filePathRelative":"30.编程技巧/30.Python/31.简单的人事系统.md","localizedDate":"2023年2月27日","excerpt":"\\n<h2> 脚本</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> streamlit <span class=\\"token keyword\\">as</span> st\\n<span class=\\"token keyword\\">import</span> pandas <span class=\\"token keyword\\">as</span> pd\\n\\n<span class=\\"token comment\\"># 创建员工类</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Employee</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__init__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> name<span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">,</span> position<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        self<span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> name\\n        self<span class=\\"token punctuation\\">.</span>age <span class=\\"token operator\\">=</span> age\\n        self<span class=\\"token punctuation\\">.</span>position <span class=\\"token operator\\">=</span> position\\n\\n<span class=\\"token comment\\"># 创建员工列表</span>\\nemployee_list <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n\\n<span class=\\"token comment\\"># 添加员工函数</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">add_employee</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">,</span> position<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    employee <span class=\\"token operator\\">=</span> Employee<span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">,</span> position<span class=\\"token punctuation\\">)</span>\\n    employee_list<span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span>employee<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\"># 显示员工列表函数</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">show_employee_list</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>employee_list<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">:</span>\\n        st<span class=\\"token punctuation\\">.</span>write<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'员工列表为空！'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n        df <span class=\\"token operator\\">=</span> pd<span class=\\"token punctuation\\">.</span>DataFrame<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">[</span>e<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">.</span>age<span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">.</span>position<span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">for</span> e <span class=\\"token keyword\\">in</span> employee_list<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> columns<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'姓名'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'年龄'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'职位'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n        st<span class=\\"token punctuation\\">.</span>dataframe<span class=\\"token punctuation\\">(</span>df<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\"># 添加员工界面</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">add_employee_page</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    st<span class=\\"token punctuation\\">.</span>write<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'添加新员工'</span><span class=\\"token punctuation\\">)</span>\\n    name <span class=\\"token operator\\">=</span> st<span class=\\"token punctuation\\">.</span>text_input<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'姓名'</span><span class=\\"token punctuation\\">)</span>\\n    age <span class=\\"token operator\\">=</span> st<span class=\\"token punctuation\\">.</span>number_input<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'年龄'</span><span class=\\"token punctuation\\">,</span> min_value<span class=\\"token operator\\">=</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> max_value<span class=\\"token operator\\">=</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span>\\n    position <span class=\\"token operator\\">=</span> st<span class=\\"token punctuation\\">.</span>text_input<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'职位'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> st<span class=\\"token punctuation\\">.</span>button<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'添加'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        add_employee<span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">,</span> position<span class=\\"token punctuation\\">)</span>\\n        st<span class=\\"token punctuation\\">.</span>success<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'添加成功！'</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\"># 显示员工列表界面</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">show_employee_list_page</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    st<span class=\\"token punctuation\\">.</span>write<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'员工列表'</span><span class=\\"token punctuation\\">)</span>\\n    show_employee_list<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\"># 主程序</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    st<span class=\\"token punctuation\\">.</span>title<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'人事系统'</span><span class=\\"token punctuation\\">)</span>\\n    menu <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'添加员工'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'员工列表'</span><span class=\\"token punctuation\\">]</span>\\n    choice <span class=\\"token operator\\">=</span> st<span class=\\"token punctuation\\">.</span>sidebar<span class=\\"token punctuation\\">.</span>selectbox<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'选择菜单'</span><span class=\\"token punctuation\\">,</span> menu<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> choice <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'添加员工'</span><span class=\\"token punctuation\\">:</span>\\n        add_employee_page<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">elif</span> choice <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'员工列表'</span><span class=\\"token punctuation\\">:</span>\\n        show_employee_list_page<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'__main__'</span><span class=\\"token punctuation\\">:</span>\\n    main<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
