import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c,e as r,a as n,d as a,w as e,f as i,b as t}from"./app-d6438571.js";const d={},k={class:"table-of-contents"},u=i(`<h2 id="ddl-data-definition-language" tabindex="-1"><a class="header-anchor" href="#ddl-data-definition-language" aria-hidden="true">#</a> DDL（Data Definition Language）</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建数据库</span>
<span class="token keyword">create</span> <span class="token keyword">database</span> 数据库名 <span class="token keyword">character</span> <span class="token keyword">set</span> 字符集<span class="token punctuation">;</span>
<span class="token comment">-- 查看数据库服务器中的所有的数据库:</span>
<span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span>
<span class="token comment">-- 查看某个数据库的定义的信息:</span>
<span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">database</span> 数据库名<span class="token punctuation">;</span>
<span class="token comment">-- 删除数据库（慎用）</span>
<span class="token keyword">drop</span> <span class="token keyword">database</span> 数据库名称<span class="token punctuation">;</span>
<span class="token comment">-- 切换数据库：</span>
<span class="token keyword">use</span> 数据库名<span class="token punctuation">;</span>
<span class="token comment">-- 查看正在使用的数据库:</span>
<span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 创建表</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> t <span class="token punctuation">(</span> id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span> c <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">unique</span><span class="token punctuation">,</span> d <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token punctuation">)</span> <span class="token keyword">engine</span> <span class="token operator">=</span> <span class="token keyword">innodb</span> <span class="token keyword">charset</span> <span class="token operator">=</span> utf8<span class="token punctuation">;</span>
<span class="token comment">-- 查看表结构</span>
<span class="token keyword">desc</span> tableName<span class="token punctuation">;</span>
<span class="token comment">-- 删除表</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> tableName<span class="token punctuation">;</span>
<span class="token comment">--修改表添加列.</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> 列名 类型<span class="token punctuation">(</span>长度<span class="token punctuation">)</span> 约束<span class="token punctuation">;</span>
<span class="token comment">--修改表修改列的类型长度及约束.</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">modify</span> 列名 类型<span class="token punctuation">(</span>长度<span class="token punctuation">)</span> 约束<span class="token punctuation">;</span>
 <span class="token comment">--修改表修改列名.</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 change 旧列名 新列名 类型<span class="token punctuation">(</span>长度<span class="token punctuation">)</span> 约束<span class="token punctuation">;</span>
<span class="token comment">--修改表删除列.</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">drop</span> 列名<span class="token punctuation">;</span>
<span class="token comment">--修改表名</span>
<span class="token keyword">rename</span> <span class="token keyword">table</span> 表名 <span class="token keyword">to</span> 新表名<span class="token punctuation">;</span>
<span class="token comment">--修改表的字符集</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">character</span> <span class="token keyword">set</span> 字符集<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dml-data-manipulation-language" tabindex="-1"><a class="header-anchor" href="#dml-data-manipulation-language" aria-hidden="true">#</a> DML（data manipulation language）</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 向表中插入某些列</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> 表 <span class="token punctuation">(</span>列名<span class="token number">1</span><span class="token punctuation">,</span>列名<span class="token number">2</span><span class="token punctuation">,</span>列名<span class="token number">3.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span>值<span class="token number">3.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 更新记录</span>
<span class="token keyword">update</span> 表名 <span class="token keyword">set</span> 字段名<span class="token operator">=</span>值<span class="token punctuation">,</span>字段名<span class="token operator">=</span>值 <span class="token keyword">where</span> 条件<span class="token punctuation">;</span>
<span class="token comment">-- 删除记录</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> 表名 <span class="token punctuation">[</span><span class="token keyword">where</span> 条件<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除表中所有记录使用【delete from 表名】，还是用【truncate table 表名】？</p><ul><li>delete ：一条一条删除，不清空 auto_increment 记录数。</li><li>truncate ：直接将表删除，重新建表，auto_increment 将置为零，从新开始。</li></ul><h2 id="dql-structure-query-language" tabindex="-1"><a class="header-anchor" href="#dql-structure-query-language" aria-hidden="true">#</a> DQL（Structure Query Language）</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> <span class="token operator">&lt;</span>select_list<span class="token operator">&gt;</span>
<span class="token keyword">FROM</span> <span class="token operator">&lt;</span>left_table<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>join_type<span class="token operator">&gt;</span>
<span class="token keyword">JOIN</span> <span class="token operator">&lt;</span>right_table<span class="token operator">&gt;</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>join_condition<span class="token operator">&gt;</span>
<span class="token keyword">WHERE</span> <span class="token operator">&lt;</span>where_condition<span class="token operator">&gt;</span>
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token operator">&lt;</span>group_by_list<span class="token operator">&gt;</span>
<span class="token keyword">HAVING</span> <span class="token operator">&lt;</span>having_condition<span class="token operator">&gt;</span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token operator">&lt;</span>order_by_condition<span class="token operator">&gt;</span>
<span class="token keyword">LIMIT</span> <span class="token operator">&lt;</span>limit_number<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sql-解析顺序" tabindex="-1"><a class="header-anchor" href="#sql-解析顺序" aria-hidden="true">#</a> SQL 解析顺序</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 行过滤</span>
<span class="token number">1</span> <span class="token keyword">FROM</span> <span class="token operator">&lt;</span>left_table<span class="token operator">&gt;</span>
<span class="token number">2</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>join_condition<span class="token operator">&gt;</span>
<span class="token number">3</span> <span class="token operator">&lt;</span>join_type<span class="token operator">&gt;</span> <span class="token keyword">JOIN</span> <span class="token operator">&lt;</span>right_table<span class="token operator">&gt;</span>    <span class="token comment">-- 第二步和第三步会循环执行</span>
<span class="token number">4</span> <span class="token keyword">WHERE</span> <span class="token operator">&lt;</span>where_condition<span class="token operator">&gt;</span>           <span class="token comment">-- 第四步会循环执行，多个条件的执行顺序是从左往右的。</span>
<span class="token number">5</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token operator">&lt;</span>group_by_list<span class="token operator">&gt;</span>
<span class="token number">6</span> <span class="token keyword">HAVING</span> <span class="token operator">&lt;</span>having_condition<span class="token operator">&gt;</span>
<span class="token comment">--列过滤</span>
<span class="token number">7</span> <span class="token keyword">SELECT</span> <span class="token comment">-- 分组之后才会执行SELECT</span>
<span class="token number">8</span> <span class="token keyword">DISTINCT</span> <span class="token operator">&lt;</span>select_list<span class="token operator">&gt;</span>
<span class="token comment">-- 排序</span>
<span class="token number">9</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token operator">&lt;</span>order_by_condition<span class="token operator">&gt;</span>
<span class="token comment">-- MySQL附加</span>
<span class="token number">10</span> <span class="token keyword">LIMIT</span> <span class="token operator">&lt;</span>limit_number<span class="token operator">&gt;</span>             <span class="token comment">-- 前9步都是SQL92标准语法。limit是MySQL的独有语法。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function m(v,b){const s=p("router-link");return l(),c("div",null,[r(" more "),n("nav",k,[n("ul",null,[n("li",null,[a(s,{to:"#ddl-data-definition-language"},{default:e(()=>[t("DDL（Data Definition Language）")]),_:1})]),n("li",null,[a(s,{to:"#dml-data-manipulation-language"},{default:e(()=>[t("DML（data manipulation language）")]),_:1})]),n("li",null,[a(s,{to:"#dql-structure-query-language"},{default:e(()=>[t("DQL（Structure Query Language）")]),_:1})]),n("li",null,[a(s,{to:"#sql-解析顺序"},{default:e(()=>[t("SQL 解析顺序")]),_:1})])])]),u])}const g=o(d,[["render",m],["__file","11.mysql基础.html.vue"]]);export{g as default};
