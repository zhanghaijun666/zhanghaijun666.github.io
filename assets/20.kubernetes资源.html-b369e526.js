const e=JSON.parse('{"key":"v-66ac832a","path":"/61.%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/60.kubernetes%E4%BB%8B%E7%BB%8D/20.kubernetes%E8%B5%84%E6%BA%90.html","title":"kubernetes资源","lang":"zh-CN","frontmatter":{"title":"kubernetes资源","date":"2023-02-23T00:00:00.000Z","category":["容器技术","kubernetes介绍"],"tag":["kubernetes介绍"],"description":"日常节点运维 ## 列出集群中的所有节点 kubectl get nodes kubectl get nodes -o wide kubectl get nodes -o wide --show-labels=true ## 将节点标记为不可调度，避免新的Pod在此节点创建和运行： kubectl cordon &lt;node-name&gt; ## 驱逐节点上的Pod容器组，被驱逐的Pod将在其它节点重新创建运行： kubectl drain &lt;node-name&gt; --delete-local-data --ignore-daemonsets --force # 这里有3个参数： # --ignore-daemonsets， 忽略 DaemonSet 管理的 Pod(避免删除,创建这样的死循环)。 # --delete-local-data，使用 emptyDir 数据卷的 Pod 也要删除。 # --force，不是由 ReplicationController 、ReplicaSet 、Job 、DaemonSet 、StatefulSet 管理的Pod(没有绑定任何控制器)也要删除。","head":[["meta",{"property":"og:url","content":"https://haijunit.top/61.%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/60.kubernetes%E4%BB%8B%E7%BB%8D/20.kubernetes%E8%B5%84%E6%BA%90.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"kubernetes资源"}],["meta",{"property":"og:description","content":"日常节点运维 ## 列出集群中的所有节点 kubectl get nodes kubectl get nodes -o wide kubectl get nodes -o wide --show-labels=true ## 将节点标记为不可调度，避免新的Pod在此节点创建和运行： kubectl cordon &lt;node-name&gt; ## 驱逐节点上的Pod容器组，被驱逐的Pod将在其它节点重新创建运行： kubectl drain &lt;node-name&gt; --delete-local-data --ignore-daemonsets --force # 这里有3个参数： # --ignore-daemonsets， 忽略 DaemonSet 管理的 Pod(避免删除,创建这样的死循环)。 # --delete-local-data，使用 emptyDir 数据卷的 Pod 也要删除。 # --force，不是由 ReplicationController 、ReplicaSet 、Job 、DaemonSet 、StatefulSet 管理的Pod(没有绑定任何控制器)也要删除。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://haijunit.top/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-23T07:13:54.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"kubernetes资源"}],["meta",{"property":"article:author","content":"知识库"}],["meta",{"property":"article:tag","content":"kubernetes介绍"}],["meta",{"property":"article:published_time","content":"2023-02-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-23T07:13:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"kubernetes资源\\",\\"image\\":[\\"https://haijunit.top/\\"],\\"datePublished\\":\\"2023-02-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-23T07:13:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"知识库\\",\\"url\\":\\"https://haijunit.top\\",\\"email\\":\\"zhanghaijun_java@163.com\\"}]}"]]},"headers":[{"level":2,"title":"日常节点运维","slug":"日常节点运维","link":"#日常节点运维","children":[]},{"level":2,"title":"创建 Namespace","slug":"创建-namespace","link":"#创建-namespace","children":[]},{"level":2,"title":"Endpoint","slug":"endpoint","link":"#endpoint","children":[]}],"git":{"createdTime":1684826034000,"updatedTime":1684826034000,"contributors":[{"name":"zhanghaijun","email":"zhanghaijun@bjtxra.com","commits":1}]},"readingTime":{"minutes":0.97,"words":291},"filePathRelative":"61.容器技术/60.kubernetes介绍/20.kubernetes资源.md","localizedDate":"2023年2月23日","excerpt":"<h2> 日常节点运维</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\">## 列出集群中的所有节点</span>\\nkubectl get nodes\\nkubectl get nodes <span class=\\"token parameter variable\\">-o</span> wide\\nkubectl get nodes <span class=\\"token parameter variable\\">-o</span> wide --show-labels<span class=\\"token operator\\">=</span>true\\n\\n<span class=\\"token comment\\">## 将节点标记为不可调度，避免新的Pod在此节点创建和运行：</span>\\nkubectl cordon <span class=\\"token operator\\">&lt;</span>node-name<span class=\\"token operator\\">&gt;</span>\\n\\n<span class=\\"token comment\\">## 驱逐节点上的Pod容器组，被驱逐的Pod将在其它节点重新创建运行：</span>\\nkubectl drain <span class=\\"token operator\\">&lt;</span>node-name<span class=\\"token operator\\">&gt;</span> --delete-local-data --ignore-daemonsets <span class=\\"token parameter variable\\">--force</span>\\n<span class=\\"token comment\\"># 这里有3个参数：</span>\\n<span class=\\"token comment\\">#   --ignore-daemonsets， 忽略 DaemonSet 管理的 Pod(避免删除,创建这样的死循环)。</span>\\n<span class=\\"token comment\\">#   --delete-local-data，使用 emptyDir 数据卷的 Pod 也要删除。</span>\\n<span class=\\"token comment\\">#   --force，不是由 ReplicationController 、ReplicaSet 、Job 、DaemonSet 、StatefulSet 管理的Pod(没有绑定任何控制器)也要删除。</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
