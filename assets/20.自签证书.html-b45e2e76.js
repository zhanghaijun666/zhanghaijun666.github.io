import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o,c,e as d,a,d as s,w as r,b as e,f as l}from"./app-d6438571.js";const m={},v={class:"table-of-contents"},k=l(`<h2 id="certbot" tabindex="-1"><a class="header-anchor" href="#certbot" aria-hidden="true">#</a> Certbot</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">###### 安装</span>
yum <span class="token function">install</span> epel-release <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> certbot <span class="token parameter variable">-y</span>
<span class="token comment">## windows安装</span>
<span class="token comment">## https://link.zhihu.com/?target=https%3A//github.com/certbot/certbot/releases/latest/download/certbot-beta-installer-win_amd64_signed.exe</span>

<span class="token comment">###### 申请证书</span>
<span class="token comment"># 泛域名：</span>
certbot certonly <span class="token parameter variable">-d</span> *.test.com <span class="token parameter variable">--manual</span> --preferred-challenges dns
<span class="token comment"># 主域名：</span>
certbot certonly <span class="token parameter variable">-d</span> test.com <span class="token parameter variable">--manual</span> --preferred-challenges dns
<span class="token comment">## 如果成功的话，它会生成两个文件：</span>
<span class="token function">ls</span> /etc/letsencrypt/live/test.com/fullchain.pem
<span class="token function">ls</span> /etc/letsencrypt/live/test.com/privkey.pem

<span class="token comment">###### 续期</span>
certbot certonly <span class="token parameter variable">-d</span> *.test.com <span class="token parameter variable">--manual</span> --preferred-challenges dns

<span class="token comment">###### 自动续期</span>
<span class="token comment">## 这里推荐 @justjavac 大佬写的，https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fjustjavac%2Fcertbot-dns-aliyun</span>
<span class="token comment">## 泛域名</span>
certbot certonly <span class="token parameter variable">-d</span> *.test.com <span class="token parameter variable">--manual</span> --preferred-challenges dns --manual-auth-hook <span class="token string">&quot;alidns&quot;</span> --manual-cleanup-hook <span class="token string">&quot;alidns clean&quot;</span>
<span class="token comment">## 续费命令</span>
certbot renew <span class="token parameter variable">--manual</span> --preferred-challenges dns --manual-auth-hook <span class="token string">&quot;alidns&quot;</span> --manual-cleanup-hook <span class="token string">&quot;alidns clean&quot;</span>
<span class="token comment">## 利用 crontab 定时任务，每天执行一下自动续期。</span>
<span class="token number">1</span> <span class="token number">1</span> */1 * * root certbot renew <span class="token parameter variable">--manual</span> --preferred-challenges dns --manual-auth-hook <span class="token string">&quot;alidns&quot;</span> --manual-cleanup-hook <span class="token string">&quot;alidns clean&quot;</span> --deploy-hook <span class="token string">&quot;nginx -s reload&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="keytool可视化工具" tabindex="-1"><a class="header-anchor" href="#keytool可视化工具" aria-hidden="true">#</a> keytool可视化工具</h2>`,3),b={href:"https://keystore-explorer.org/index.html",target:"_blank",rel:"noopener noreferrer"},u=l(`<h2 id="证书格式" tabindex="-1"><a class="header-anchor" href="#证书格式" aria-hidden="true">#</a> 证书格式</h2><ul><li><code>*.DER或*.CER文件</code>： 这样的证书文件是二进制格式，只含有证书信息，不包含私钥。</li><li><code>*.CRT文件</code>： 这样的证书文件可以是二进制格式，也可以是文本格式，一般均为文本格式，功能与 <em>.DER及</em>.CER证书文件相同。</li><li><code>*.PEM文件</code>： 这样的证书文件一般是文本格式，可以存放证书或私钥，或者两者都包含。 <em>.PEM 文件如果只包含私钥，一般用</em>.KEY文件代替。</li><li><code>*.PFX或*.P12文件</code>： 这样的证书文件是二进制格式，同时包含证书和私钥，且一般有密码保护。可以使用记事本直接打开。</li></ul><h2 id="密钥库文件格式【keystore】" tabindex="-1"><a class="header-anchor" href="#密钥库文件格式【keystore】" aria-hidden="true">#</a> 密钥库文件格式【Keystore】</h2><h3 id="keytool-命令" tabindex="-1"><a class="header-anchor" href="#keytool-命令" aria-hidden="true">#</a> keytool 命令</h3><p>keytool</p><ul><li><code>- genkey</code></li><li><code>- alias tomcat</code> (别名)</li><li><code>- keypass 123456</code> (别名密码)</li><li><code>- keyalg RSA</code> (生证书的算法名称，RSA是一种非对称加密算法)</li><li><code>- keysize 2048</code> (密钥长度,证书大小)</li><li><code>- validity 365</code> (证书有效期，天单位)</li><li><code>- keystore ./tomcat.keystore</code> (指定生成证书的位置和证书名称)</li><li><code>- storepass 123456</code> (获取keystore信息的密码)</li><li><code>- storetype PKCS12</code> (指定密钥仓库类型)</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 生成证书 使用JDK自带的工具keytool (keytool -genkeypair)</span>
keytool <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-alias</span> caskeystore <span class="token parameter variable">-keyalg</span> RSA <span class="token parameter variable">-keystore</span> thekeystore <span class="token punctuation">\\</span>
    <span class="token parameter variable">-storepass</span> <span class="token number">123456</span> <span class="token parameter variable">-keypass</span> <span class="token number">123456</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-dname</span> <span class="token string">&quot;CN=cas.alot.pw, OU=bjtxra,OU=com,S=BJ,C=CN&quot;</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-ext</span> <span class="token assign-left variable">SAN</span><span class="token operator">=</span><span class="token string">&quot;dns:localhost,ip:127.0.0.1&quot;</span>
<span class="token comment"># 查看证书信息</span>
keytool <span class="token parameter variable">-list</span> <span class="token parameter variable">-keystore</span> thekeystore
<span class="token comment"># 导出数字证书</span>
keytool <span class="token parameter variable">-export</span> <span class="token parameter variable">-alias</span> caskeystore <span class="token parameter variable">-storepass</span> <span class="token number">123456</span> <span class="token parameter variable">-keystore</span> thekeystore <span class="token parameter variable">-rfc</span> <span class="token parameter variable">-file</span> cas.crt
<span class="token comment"># 将数字证书导入jdk下的jre里，这里导入JDK时需要默认密码 changeit</span>
<span class="token comment"># windows:</span>
keytool <span class="token parameter variable">-import</span> <span class="token parameter variable">-alias</span> caskeystore <span class="token parameter variable">-keystore</span> %JAVA_HOME%<span class="token punctuation">\\</span>jre<span class="token punctuation">\\</span>lib<span class="token punctuation">\\</span>security<span class="token punctuation">\\</span>cacerts <span class="token parameter variable">-file</span> cas.crt <span class="token parameter variable">-trustcacerts</span> <span class="token parameter variable">-storepass</span> changeit
<span class="token comment"># Unix:</span>
<span class="token function">sudo</span> keytool <span class="token parameter variable">-import</span> <span class="token parameter variable">-alias</span> caskeystore <span class="token parameter variable">-keystore</span> <span class="token variable">$JAVA_HOME</span>/jre/lib/security/cacerts <span class="token parameter variable">-file</span> cas.crt <span class="token parameter variable">-trustcacerts</span> <span class="token parameter variable">-storepass</span> changeit


keytool <span class="token parameter variable">-genkeypair</span> <span class="token parameter variable">-alias</span> DEV <span class="token parameter variable">-keyalg</span> RSA <span class="token parameter variable">-keysize</span> <span class="token number">2048</span> <span class="token parameter variable">-storetype</span> PKCS12 <span class="token parameter variable">-keystore</span> server.p12 <span class="token parameter variable">-validity</span> <span class="token number">365</span> <span class="token parameter variable">-storepass</span> <span class="token number">123456</span> <span class="token parameter variable">-keypass</span> <span class="token number">123456</span> <span class="token parameter variable">-dname</span> <span class="token string">&quot;CN=DEV,OU=DEV,O=Asia,L=BJ,ST=BJ,C=CN&quot;</span> <span class="token parameter variable">-ext</span> <span class="token assign-left variable">san</span><span class="token operator">=</span>ip:192.168.13.96,ip:127.0.0.1,dns:localhost

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="keytool可视化工具-1" tabindex="-1"><a class="header-anchor" href="#keytool可视化工具-1" aria-hidden="true">#</a> keytool可视化工具</h3>`,8),h={href:"https://keystore-explorer.org/index.html",target:"_blank",rel:"noopener noreferrer"},g=l(`<h3 id="keytool-命令-1" tabindex="-1"><a class="header-anchor" href="#keytool-命令-1" aria-hidden="true">#</a> keytool 命令</h3><p>keytool</p><ul><li><code>- genkey</code></li><li><code>- alias tomcat</code> (别名)</li><li><code>- keypass 123456</code> (别名密码)</li><li><code>- keyalg RSA</code> (生证书的算法名称，RSA是一种非对称加密算法)</li><li><code>- keysize 2048</code> (密钥长度,证书大小)</li><li><code>- validity 365</code> (证书有效期，天单位)</li><li><code>- keystore ./tomcat.keystore</code> (指定生成证书的位置和证书名称)</li><li><code>- storepass 123456</code> (获取keystore信息的密码)</li><li><code>- storetype PKCS12</code> (指定密钥仓库类型)</li></ul><h2 id="证书格式-1" tabindex="-1"><a class="header-anchor" href="#证书格式-1" aria-hidden="true">#</a> 证书格式</h2><ul><li><code>*.der文件</code>或<code>*.cer文件</code>： 这样的证书文件是二进制格式，只含有证书信息，不包含私钥。</li><li><code>*.crt文件</code>： 这样的证书文件可以是二进制格式，也可以是文本格式，一般均为文本格式，功能与 <code>*.der</code>及<code>*.cer</code>证书文件相同。</li><li><code>*.pem文件</code>： 这样的证书文件一般是文本格式，可以存放证书或私钥，或者两者都包含。 <code>*.pem</code> 文件如果只包含私钥，一般用<code>*.key</code>文件代替。</li><li><code>*.pfx文件</code>或<code>*.p12文件</code>： 证书交换格式，是二进制格式，同时包含证书和私钥，用于交换传输，且一般有密码保护。</li></ul><p>自签名证书：用自己的私钥签发自己的公钥即主体信息生成的证书。<br> 证书签名：对证书固定值进行hash后用密钥对中的私钥对hash值加密</p><h2 id="keytool" tabindex="-1"><a class="header-anchor" href="#keytool" aria-hidden="true">#</a> keytool</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment">## 创建密钥对 DEV.P12</span>
keytool <span class="token parameter variable">-genkeypair</span> <span class="token parameter variable">-alias</span> DEV <span class="token parameter variable">-keyalg</span> RSA <span class="token parameter variable">-keysize</span> <span class="token number">2048</span> <span class="token parameter variable">-storetype</span> PKCS12 <span class="token parameter variable">-keystore</span> DEV.p12 <span class="token parameter variable">-validity</span> <span class="token number">365</span> <span class="token parameter variable">-storepass</span> <span class="token number">123456</span> <span class="token parameter variable">-keypass</span> <span class="token number">123456</span> <span class="token parameter variable">-dname</span> <span class="token string">&quot;CN=DEV,OU=DEV,O=Asia,L=BJ,ST=BJ,C=CN&quot;</span> <span class="token parameter variable">-ext</span> <span class="token assign-left variable">san</span><span class="token operator">=</span>ip:192.168.13.96,ip:127.0.0.1,dns:localhost
<span class="token comment">## 创建密钥对 DEV.jks</span>
keytool <span class="token parameter variable">-genkeypair</span> <span class="token parameter variable">-alias</span> DEV <span class="token parameter variable">-keyalg</span> RSA <span class="token parameter variable">-keysize</span> <span class="token number">2048</span> <span class="token parameter variable">-storetype</span> JKS    <span class="token parameter variable">-keystore</span> DEV.jks <span class="token parameter variable">-validity</span> <span class="token number">365</span> <span class="token parameter variable">-storepass</span> <span class="token number">123456</span> <span class="token parameter variable">-keypass</span> <span class="token number">123456</span> <span class="token parameter variable">-dname</span> <span class="token string">&quot;CN=DEV,OU=DEV,O=Asia,L=BJ,ST=BJ,C=CN&quot;</span> <span class="token parameter variable">-ext</span> <span class="token assign-left variable">san</span><span class="token operator">=</span>ip:192.168.13.96,ip:127.0.0.1,dns:localhost
<span class="token comment">## 创建密钥对 DEV.ks</span>
keytool <span class="token parameter variable">-genkeypair</span> <span class="token parameter variable">-alias</span> DEV <span class="token parameter variable">-keyalg</span> RSA <span class="token parameter variable">-keysize</span> <span class="token number">2048</span> <span class="token parameter variable">-storetype</span> PKCS12 <span class="token parameter variable">-keystore</span> DEV.ks  <span class="token parameter variable">-validity</span> <span class="token number">365</span> <span class="token parameter variable">-storepass</span> <span class="token number">123456</span> <span class="token parameter variable">-keypass</span> <span class="token number">123456</span> <span class="token parameter variable">-dname</span> <span class="token string">&quot;CN=DEV,OU=DEV,O=Asia,L=BJ,ST=BJ,C=CN&quot;</span> <span class="token parameter variable">-ext</span> <span class="token assign-left variable">san</span><span class="token operator">=</span>ip:192.168.13.96,ip:127.0.0.1,dns:localhost
<span class="token comment">## 输出证书内容</span>
keytool <span class="token parameter variable">-list</span> <span class="token parameter variable">-rfc</span> <span class="token parameter variable">-keystore</span> DEV.jks <span class="token parameter variable">-storepass</span> <span class="token number">123456</span>
<span class="token comment">## 输出公钥和证书信息</span>
keytool <span class="token parameter variable">-list</span> <span class="token parameter variable">-rfc</span> <span class="token parameter variable">--keystore</span> DEV.jks <span class="token parameter variable">-storepass</span> <span class="token number">123456</span> <span class="token operator">|</span> openssl x509 <span class="token parameter variable">-inform</span> pem <span class="token parameter variable">-pubkey</span>
<span class="token comment">## DEV.jks =&gt; DEV.pfx</span>
keytool <span class="token parameter variable">-v</span> <span class="token parameter variable">-importkeystore</span> <span class="token parameter variable">-srckeystore</span> DEV.jks <span class="token parameter variable">-srcstoretype</span> JKS <span class="token parameter variable">-srcstorepass</span> <span class="token number">123456</span> <span class="token parameter variable">-destkeystore</span> DEV.pfx <span class="token parameter variable">-deststoretype</span> pkcs12 <span class="token parameter variable">-deststorepass</span> <span class="token number">123456</span> <span class="token parameter variable">-destkeypass</span> <span class="token number">123456</span>
<span class="token comment">## 输出 DEV.pfx 的私钥内容到文件中</span>
openssl pkcs12 <span class="token parameter variable">-in</span> DEV.pfx <span class="token parameter variable">-nocerts</span> <span class="token parameter variable">-nodes</span> <span class="token parameter variable">-out</span> DEV.private
<span class="token comment">## DEV.p12 =&gt; DEV.cer 导出数字证书</span>
keytool <span class="token parameter variable">-keystore</span> ./DEV.p12 <span class="token parameter variable">-export</span> <span class="token parameter variable">-alias</span> DEV <span class="token parameter variable">-file</span> DEV.cer <span class="token parameter variable">-storepass</span> <span class="token number">123456</span>
<span class="token comment">## 创建密钥 DEV.ks</span>
keytool <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-alias</span> DEV <span class="token parameter variable">-keyalg</span> RSA <span class="token parameter variable">-keysize</span> <span class="token number">2048</span> <span class="token parameter variable">-keystore</span> ./DEV.ks <span class="token parameter variable">-validity</span> <span class="token number">365</span> <span class="token parameter variable">-storepass</span> <span class="token number">123456</span> <span class="token parameter variable">-dname</span> <span class="token string">&quot;CN=DEV,OU=DEV,O=Asia,L=BJ,ST=BJ,C=CN&quot;</span> <span class="token parameter variable">-ext</span> <span class="token assign-left variable">san</span><span class="token operator">=</span>ip:192.168.13.96,ip:127.0.0.1,dns:localhost
<span class="token comment">## 查看信息</span>
keytool <span class="token parameter variable">-list</span> <span class="token parameter variable">-v</span> <span class="token parameter variable">-keystore</span> ./DEV.ks  <span class="token parameter variable">-storepass</span> <span class="token number">123456</span>
<span class="token comment">## 生成证书 DEV.cer  (需要 DEV.ks) （CA）将证书安装在本地计算机的[受信任的根证书颁发机构]中</span>
keytool <span class="token parameter variable">-export</span> <span class="token parameter variable">-alias</span> DEV <span class="token parameter variable">-file</span> DEV.cer <span class="token parameter variable">-keystore</span> ./DEV.ks <span class="token parameter variable">-storepass</span> <span class="token number">123456</span>
<span class="token comment">## 生成证书 DEV.crt （需要 DEV.ks）  将证书安装在本地计算机的[受信任的根证书颁发机构]中</span>
keytool <span class="token parameter variable">-export</span> <span class="token parameter variable">-alias</span> DEV <span class="token parameter variable">-file</span> DEV.crt <span class="token parameter variable">-keystore</span> ./DEV.ks <span class="token parameter variable">-storepass</span> <span class="token number">123456</span>
<span class="token comment">## 生成证书签名请求（CSR文件）</span>
keytool <span class="token parameter variable">-certreq</span> <span class="token parameter variable">-alias</span> DEV <span class="token parameter variable">-file</span> DEV.csr <span class="token parameter variable">-keystore</span> DEV.ks <span class="token parameter variable">-storepass</span> <span class="token number">123456</span>

---
<span class="token comment">## 使用CA证书给golove证书签名，即用CA的私钥签名后与golove的公钥生成一个证书</span>
keytool <span class="token parameter variable">-gencert</span> <span class="token parameter variable">-alias</span> DEV <span class="token parameter variable">-keystore</span> DEV.ks <span class="token parameter variable">-infile</span> DEV.csr <span class="token parameter variable">-outfile</span> DEV.crt

---
<span class="token comment">## 输出公钥内容和证书内容</span>
keytool <span class="token parameter variable">-list</span> <span class="token parameter variable">-rfc</span> <span class="token parameter variable">--keystore</span> DEV.ks <span class="token parameter variable">-storepass</span> <span class="token number">123456</span> <span class="token operator">|</span> openssl x509 <span class="token parameter variable">-inform</span> pem <span class="token parameter variable">-pubkey</span>
<span class="token comment">## 输出私钥内容</span>
openssl pkcs12 <span class="token parameter variable">-in</span> DEV.ks <span class="token parameter variable">-nocerts</span> <span class="token parameter variable">-nodes</span> <span class="token parameter variable">-out</span> DEV.private

---

<span class="token comment">## jks转换为keystore</span>
keytool <span class="token parameter variable">-importkeystore</span> <span class="token parameter variable">-srckeystore</span> e:/keystore/app.jks <span class="token parameter variable">-srcstoretype</span> JKS <span class="token parameter variable">-deststoretype</span> PKCS12 <span class="token parameter variable">-destkeystore</span> e:/keystore/app.p12
keytool <span class="token parameter variable">-v</span> <span class="token parameter variable">-importkeystore</span> <span class="token parameter variable">-srckeystore</span> e:/keystore/app.p12 <span class="token parameter variable">-srcstoretype</span> PKCS12 <span class="token parameter variable">-deststoretype</span> JKS <span class="token parameter variable">-destkeystore</span> e:/keystore/app.keystore
<span class="token comment">## keystore转换为jks</span>
keytool <span class="token parameter variable">-importkeystore</span> <span class="token parameter variable">-srckeystore</span> e:/keystore/app.keystore <span class="token parameter variable">-srcstoretype</span> JKS <span class="token parameter variable">-deststoretype</span> PKCS12 <span class="token parameter variable">-destkeystore</span> e:/keystore/app.p12
keytool <span class="token parameter variable">-v</span> <span class="token parameter variable">-importkeystore</span> <span class="token parameter variable">-srckeystore</span> e:/keystore/app.p12 <span class="token parameter variable">-srcstoretype</span> PKCS12 <span class="token parameter variable">-destkeystore</span> <span class="token parameter variable">-deststoretype</span> JKS e:/keystore/app.jks
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="openssl" tabindex="-1"><a class="header-anchor" href="#openssl" aria-hidden="true">#</a> openssl</h2>`,9),y={href:"https://www.openssl.org/docs/manpages.html",target:"_blank",rel:"noopener noreferrer"},_=l(`<h3 id="rsa" tabindex="-1"><a class="header-anchor" href="#rsa" aria-hidden="true">#</a> RSA</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1024 秘钥长度</span>
openssl genrsa <span class="token parameter variable">-out</span> private.pem <span class="token number">1024</span>

<span class="token comment"># 查看私钥信息</span>
openssl rsa <span class="token parameter variable">-in</span> private.pem <span class="token parameter variable">-text</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">###### 生成根证书 ######</span>
<span class="token comment">## 创建根证书私钥</span>
openssl genrsa <span class="token parameter variable">-out</span> root.key <span class="token number">1024</span>
<span class="token comment">## 创建根证书请求文件</span>
openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> root.key <span class="token parameter variable">-out</span> root.csr
<span class="token comment">## 创建根证书</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> root.csr <span class="token parameter variable">-out</span> root.crt <span class="token parameter variable">-signkey</span> root.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span>

<span class="token comment">###### 生成客户端证书 ######</span>
<span class="token comment">## 生成客户端证书私钥</span>
openssl genrsa <span class="token parameter variable">-out</span> client.key <span class="token number">1024</span>
<span class="token comment">## 生成客户端证书请求文件</span>
openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> client.key <span class="token parameter variable">-out</span> client.csr
<span class="token comment">## 生成客户端证书</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> client.csr <span class="token parameter variable">-out</span> client.crt <span class="token parameter variable">-signkey</span> client.key <span class="token parameter variable">-CA</span> root.crt <span class="token parameter variable">-CAkey</span> root.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span>
<span class="token comment">## 生客户端p12格式证书，需要输入一个密码，选一个好记的，比如123456</span>
openssl pkcs12 <span class="token parameter variable">-export</span> <span class="token parameter variable">-clcerts</span> <span class="token parameter variable">-in</span> client.crt <span class="token parameter variable">-inkey</span> client.key <span class="token parameter variable">-out</span> client.p12
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sm2" tabindex="-1"><a class="header-anchor" href="#sm2" aria-hidden="true">#</a> SM2</h3>`,4),x=a("code",null,"1.0.1",-1),f=a("code",null,"Openssl1.1.1+",-1),E={href:"https://github.com/openssl/openssl/releases",target:"_blank",rel:"noopener noreferrer"},C=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 是否支持国密</span>
openssl ecparam <span class="token parameter variable">-list_curves</span> <span class="token operator">|</span> <span class="token function">grep</span> SM2

<span class="token function">curl</span> <span class="token parameter variable">-o</span> openssl-1.1.1d.tar.gz https://www.openssl.org/source/openssl-1.1.1d.tar.gz
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> openssl-1.1.1d.tar.gz
<span class="token builtin class-name">cd</span> openssl-1.1.1d <span class="token operator">&amp;&amp;</span> ./config <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/openssl <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
<span class="token comment">## 设置openssl lib .so加载配置:</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;/usr/local/openssl/lib&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/ld.so.conf  <span class="token operator">&amp;&amp;</span> ldconfig <span class="token parameter variable">-v</span>
<span class="token comment">## 版本输出</span>
openssl version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="国密证书" tabindex="-1"><a class="header-anchor" href="#国密证书" aria-hidden="true">#</a> 国密证书</h2>`,2),S={href:"https://www.gmssl.cn/gmssl/index.jsp",target:"_blank",rel:"noopener noreferrer"},A=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">###### 单根证书签发用户证书流程 ###### 生成根证书</span>
<span class="token comment"># 创建根证书私钥</span>
openssl ecparam <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-name</span> SM2 <span class="token parameter variable">-param_enc</span> explicit <span class="token parameter variable">-outform</span> pem <span class="token parameter variable">-out</span> root.key 
<span class="token comment"># 创建根证书请求文件</span>
openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> root.key <span class="token parameter variable">-out</span> root.csr <span class="token parameter variable">-subj</span> <span class="token string">&quot;/emailAddress=/CN=TXRA-CA/OU=DEVOPS/O=TXRA/L=BJ/ST=BJ/C=CN&quot;</span>
<span class="token comment"># 创建根证书</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> root.csr <span class="token parameter variable">-out</span> root.crt <span class="token parameter variable">-signkey</span> root.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> 

<span class="token comment">###### 单根证书签发用户证书流程 ###### 生成客户端证书</span>
<span class="token comment"># 生成客户端证书私钥</span>
openssl ecparam <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-name</span> SM2 <span class="token parameter variable">-param_enc</span> explicit <span class="token parameter variable">-outform</span> pem <span class="token parameter variable">-out</span> client.key
<span class="token comment"># 生成客户端证书请求文件</span>
openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> client.key <span class="token parameter variable">-out</span> client.csr <span class="token parameter variable">-subj</span> <span class="token string">&quot;/emailAddress=/CN=test1/OU=devbj/O=TXRA/L=BJ/ST=BJ/C=CN&quot;</span>
<span class="token comment"># 生成客户端证书</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> client.csr <span class="token parameter variable">-out</span> client.crt <span class="token parameter variable">-signkey</span> client.key <span class="token parameter variable">-CA</span> root.crt <span class="token parameter variable">-CAkey</span> root.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span>
<span class="token comment"># 生客户端p12格式证书，需要输入一个密码，选一个好记的，比如123456</span>
openssl pkcs12 <span class="token parameter variable">-export</span> <span class="token parameter variable">-clcerts</span> <span class="token parameter variable">-in</span> client.crt <span class="token parameter variable">-inkey</span> client.key <span class="token parameter variable">-out</span> client.p12 <span class="token parameter variable">-passout</span> pass:

<span class="token comment">###### 证书链签发用户证书流程 ###### 生成根证书</span>
<span class="token comment"># 创建根证书私钥</span>
openssl ecparam <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-name</span> SM2 <span class="token parameter variable">-param_enc</span> explicit <span class="token parameter variable">-outform</span> pem <span class="token parameter variable">-out</span> root.key 
<span class="token comment"># 创建根证书请求文件</span>
openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> root.key <span class="token parameter variable">-out</span> root.csr
<span class="token comment"># 创建根证书</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> root.csr <span class="token parameter variable">-out</span> root.crt <span class="token parameter variable">-signkey</span> root.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span>

<span class="token comment">###### 证书链签发用户证书流程 ######</span>
<span class="token comment">###### 生成二级根证书</span>
<span class="token comment"># 创建根证书私钥</span>
openssl ecparam <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-name</span> SM2 <span class="token parameter variable">-param_enc</span> explicit <span class="token parameter variable">-outform</span> pem <span class="token parameter variable">-out</span> sub_root.key 
<span class="token comment"># 创建根证书请求文件</span>
openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> sub_root.key <span class="token parameter variable">-out</span> sub_root.csr
<span class="token comment"># 创建根证书</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> sub_root.csr <span class="token parameter variable">-out</span> sub_root.crt <span class="token parameter variable">-signkey</span> sub_root.key <span class="token parameter variable">-CA</span> root.crt <span class="token parameter variable">-CAkey</span> root.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span>

<span class="token comment">###### 生成证书链文件（p7b）</span>
openssl crl2pkcs7 <span class="token parameter variable">-certfile</span> root.crt <span class="token parameter variable">-certfile</span> sub_root.crt <span class="token parameter variable">-outform</span> DER <span class="token parameter variable">-out</span> root.p7b <span class="token parameter variable">-nocrl</span>

<span class="token comment">###### 生成客户端证书（二级根证书签发用户证书）</span>
<span class="token comment"># 生成客户端证书私钥</span>
openssl ecparam <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-name</span> SM2 <span class="token parameter variable">-param_enc</span> explicit <span class="token parameter variable">-outform</span> pem <span class="token parameter variable">-out</span> client.key
<span class="token comment"># 生成客户端证书请求文件</span>
openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> client.key <span class="token parameter variable">-out</span> client.csr
<span class="token comment"># 生成客户端证书</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> client.csr <span class="token parameter variable">-out</span> client.crt <span class="token parameter variable">-signkey</span> client.key <span class="token parameter variable">-CA</span> sub_root.crt <span class="token parameter variable">-CAkey</span> sub_root.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span>
<span class="token comment"># 生客户端p12格式证书，需要输入一个密码，选一个好记的，比如123456</span>
openssl pkcs12 <span class="token parameter variable">-export</span> <span class="token parameter variable">-clcerts</span> <span class="token parameter variable">-in</span> client.crt <span class="token parameter variable">-inkey</span> client.key <span class="token parameter variable">-out</span> client.p12
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1.背景</h2><h3 id="_1-2-证书内容格式-rsa为例" tabindex="-1"><a class="header-anchor" href="#_1-2-证书内容格式-rsa为例" aria-hidden="true">#</a> 1.2 证书内容格式 ( RSA为例 )</h3><h4 id="_1-2-1-pkcs-1" tabindex="-1"><a class="header-anchor" href="#_1-2-1-pkcs-1" aria-hidden="true">#</a> 1.2.1 <code>PKCS#1</code></h4><blockquote><p>只是一个 RSA 密钥，即只有PKCS#8 中的密钥对象部分，前面没有版本或算法标识符。</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[[私钥]]
-----BEGIN RSA PRIVATE KEY-----
base64 str,每64字节做一次换行。
-----END RSA PRIVATE KEY-----

[[公钥]]
-----BEGIN RSA PUBLIC KEY-----
base64 str,每64字节做一次换行。
-----END RSA PUBLIC KEY-----
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>-----BEGIN RSA PRIVATE KEY-----
MIICXgIBAAKBgQC9blXCZeuSuk5CpJvlyFDquyhIonRPaSlSjKYgKd9b9S0i8ubM
COPGWm+c4J48dunrXqPPUeCh4ZPtV63+7P93QMAvsR125ymeisEI9eBie0TWYoWQ
uKc5GCrIICqqe7f9DoM22tzg2h1Y7DadnOF4NZzC3CYBUzQezwyHDlxhdwIDAQAB
AoGBALMK8SXPXUwOqV+V4//YSJrEELwuSA6yj6sFYxMtYH6zCllpCjm5AUh+O9Yj
+4ucvVWI2v1eHxoCcuW2pK85Y+65pAXAyL1m0VEcz9R42MupiGekgNU2YoX0SHj5
br3D8/Jf3W0kaXvvkUsS/Hy0acRMsmBZsXK9oSX9BhI/BiU5AkEA89RhBznRDGNs
wnylWtrG/fME7ixQnS9FBCZJdskQulgaXxigWiU8CPO7JU3tafj4pk9vA3yNyiUM
DvjfWeuKVQJBAMbi26qT0C02hFB9WcmLSS2+64qSsq1ATJ/6cENkdKCU67dbOeQO
PvFJPxFfOjk0Zh/ZZKRSCCfkb7e3P3yhIJsCQD6mOBQKN/tt5HkIW9g/VFfVxFOK
EWCBz8LkL4YU3XZzwrricfkXjhhiv5gzMKhE72aUDFsh+rCQ2ktSiNjq200CQQDD
hUpGi0Hg8PNq3ZBjXpb2bfbJKCaXw9qQe3faCOvO4hhJDVoAJTEjq8pgnalzi1vK
e8FA+ZQjA6QAjBnRv+V5AkEApWk1I9wliCVJGVXjaGaFKYHI/TAL050ABDJ5M6eV
BkD4DwREVeKtoWX0KJyUdRzpuz0NZUHDYzi61mSWnu8ezQ==
-----END RSA PRIVATE KEY-----
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-2-pkcs-8" tabindex="-1"><a class="header-anchor" href="#_1-2-2-pkcs-8" aria-hidden="true">#</a> 1.2.2 <code>PKCS#8</code></h4>`,9),D={href:"https://baike.baidu.com/item/%E5%AF%B9%E8%B1%A1%E6%A0%87%E8%AF%86%E7%AC%A6/21125614?fromtitle=OID&fromid=2723970&fr=aladdin",target:"_blank",rel:"noopener noreferrer"},K=l(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[[私钥]]
-----BEGIN PRIVATE KEY-----
base64 str,每64字节做一次换行。
-----END PRIVATE KEY-----

[[公钥]]
-----BEGIN PUBLIC KEY-----
base64 str,每64字节做一次换行。
-----END PUBLIC KEY-----
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>-----BEGIN PRIVATE KEY-----
MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAL1uVcJl65K6TkKk
m+XIUOq7KEiidE9pKVKMpiAp31v1LSLy5swI48Zab5zgnjx26eteo89R4KHhk+1X
rf7s/3dAwC+xHXbnKZ6KwQj14GJ7RNZihZC4pzkYKsggKqp7t/0Ogzba3ODaHVjs
Np2c4Xg1nMLcJgFTNB7PDIcOXGF3AgMBAAECgYEAswrxJc9dTA6pX5Xj/9hImsQQ
vC5IDrKPqwVjEy1gfrMKWWkKObkBSH471iP7i5y9VYja/V4fGgJy5bakrzlj7rmk
BcDIvWbRURzP1HjYy6mIZ6SA1TZihfRIePluvcPz8l/dbSRpe++RSxL8fLRpxEyy
YFmxcr2hJf0GEj8GJTkCQQDz1GEHOdEMY2zCfKVa2sb98wTuLFCdL0UEJkl2yRC6
WBpfGKBaJTwI87slTe1p+PimT28DfI3KJQwO+N9Z64pVAkEAxuLbqpPQLTaEUH1Z
yYtJLb7ripKyrUBMn/pwQ2R0oJTrt1s55A4+8Uk/EV86OTRmH9lkpFIIJ+Rvt7c/
fKEgmwJAPqY4FAo3+23keQhb2D9UV9XEU4oRYIHPwuQvhhTddnPCuuJx+ReOGGK/
mDMwqETvZpQMWyH6sJDaS1KI2OrbTQJBAMOFSkaLQeDw82rdkGNelvZt9skoJpfD
2pB7d9oI687iGEkNWgAlMSOrymCdqXOLW8p7wUD5lCMDpACMGdG/5XkCQQClaTUj
3CWIJUkZVeNoZoUpgcj9MAvTnQAEMnkzp5UGQPgPBERV4q2hZfQonJR1HOm7PQ1l
QcNjOLrWZJae7x7N
-----END PRIVATE KEY-----
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-证书文件格式" tabindex="-1"><a class="header-anchor" href="#_1-3-证书文件格式" aria-hidden="true">#</a> 1.3 证书文件格式</h3>`,4),P={href:"https://blog.csdn.net/fengshenyun/article/details/124596279",target:"_blank",rel:"noopener noreferrer"},q=l(`<blockquote><p>PEM 与 DER是用于存储、传输密钥和证书的标准格式，两者紧密关联，可以互相转换。</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ASN.1 ------（序列化）------ DER ------（Base64编码）------ PEM
# 对 ASN.1 序列化后，就会生成一个二进制串，这个就是 DER 格式。
# 将二进制进行 Base64 编码，再加上 PEM 格式特有的头尾两行，就生成了 PEM 格式。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-3-2-der" tabindex="-1"><a class="header-anchor" href="#_1-3-2-der" aria-hidden="true">#</a> 1.3.2 DER</h4><blockquote><p>类比上面的PKCS#1，Distinguished Encoding Rules，可分辩编码规则。</p></blockquote><p>DER格式文件后缀通常为 <code>.der</code> 和 <code>.cer</code>，后缀名并不会影响 DER 格式文件的解析。</p><h4 id="_1-3-1-pem" tabindex="-1"><a class="header-anchor" href="#_1-3-1-pem" aria-hidden="true">#</a> 1.3.1 PEM</h4><blockquote><p>类比上面的PKCS#8</p></blockquote><p>PEM格式文件后缀通常为<code>.pem</code>、<code>.cer</code>、<code>.crt</code>、<code>.key</code>，后缀名并不会影响 PEM 格式文件的解析。</p><h4 id="_1-3-3-pem-转-der" tabindex="-1"><a class="header-anchor" href="#_1-3-3-pem-转-der" aria-hidden="true">#</a> 1.3.3 PEM 转 DER</h4><ul><li>先将 PEM 文件里面首尾的 <code>----BEGIN xxx----</code> 和 <code>----END xxx----</code>两行去掉</li><li>再将内容合并为一行（去掉换行符<code>\\r\\n</code>）</li><li>接着将内容进行 Base64 解码</li></ul><blockquote><p>通过 openssl 命令转换如下：</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>openssl rsa -in rsa_private.pem -outform DER -out rsa_private.der
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_1-3-4-der-转-pem" tabindex="-1"><a class="header-anchor" href="#_1-3-4-der-转-pem" aria-hidden="true">#</a> 1.3.4 DER 转 PEM</h4><ul><li>先将 DER 二进制内容进行 Base64 编码</li><li>再按每行 64 个字节进行切分</li><li>最后在切分后的内容前后加上 <code>----BEGIN xxx----</code>和 <code>----END xxx----</code></li></ul><blockquote><p>通过 openssl 命令转换如下：</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl rsa <span class="token parameter variable">-inform</span> DER <span class="token parameter variable">-in</span> rsa_private.der <span class="token parameter variable">-outform</span> PEM <span class="token parameter variable">-out</span> rsa_private2.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-rsa" tabindex="-1"><a class="header-anchor" href="#_2-rsa" aria-hidden="true">#</a> 2.RSA</h2><h3 id="_2-1-私钥部分" tabindex="-1"><a class="header-anchor" href="#_2-1-私钥部分" aria-hidden="true">#</a> 2.1 私钥部分</h3><h4 id="_2-1-1-生成私钥-pkcs-1" tabindex="-1"><a class="header-anchor" href="#_2-1-1-生成私钥-pkcs-1" aria-hidden="true">#</a> 2.1.1 生成私钥：<code>PKCS#1</code></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1024 秘钥长度</span>
openssl genrsa <span class="token parameter variable">-out</span> private.pem <span class="token number">1024</span>

<span class="token comment"># 查看私钥信息</span>
openssl rsa <span class="token parameter variable">-in</span> private.pem <span class="token parameter variable">-text</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-2-私钥-pkcs1-pkcs8" tabindex="-1"><a class="header-anchor" href="#_2-1-2-私钥-pkcs1-pkcs8" aria-hidden="true">#</a> 2.1.2 私钥：<code>PKCS1</code> -&gt; <code>PKCS8</code></h4><blockquote><p>pem格式转der格式</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl pkcs8 <span class="token parameter variable">-topk8</span> <span class="token parameter variable">-inform</span> PEM <span class="token parameter variable">-in</span> private.pem <span class="token parameter variable">-outform</span> pem <span class="token parameter variable">-nocrypt</span> <span class="token parameter variable">-out</span> private_pkcs8.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-1-3-私钥-pkcs8-pkcs1" tabindex="-1"><a class="header-anchor" href="#_2-1-3-私钥-pkcs8-pkcs1" aria-hidden="true">#</a> 2.1.3 私钥：PKCS8 -&gt; PKCS1</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl rsa <span class="token parameter variable">-in</span> private_pkcs8.pem <span class="token parameter variable">-out</span> private_pkcs1.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-2-公钥部分" tabindex="-1"><a class="header-anchor" href="#_2-2-公钥部分" aria-hidden="true">#</a> 2.2 公钥部分</h3><h4 id="_2-2-1-导出公钥-从pkcs1私钥-导出pkcs8公钥" tabindex="-1"><a class="header-anchor" href="#_2-2-1-导出公钥-从pkcs1私钥-导出pkcs8公钥" aria-hidden="true">#</a> 2.2.1 导出公钥：从PKCS1私钥 导出PKCS8公钥</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl rsa <span class="token parameter variable">-in</span> private_pkcs1.pem <span class="token parameter variable">-pubout</span> <span class="token parameter variable">-out</span> public_pkcs8.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-2-2-导出公钥-从pkcs8私钥-导出pkcs8公钥" tabindex="-1"><a class="header-anchor" href="#_2-2-2-导出公钥-从pkcs8私钥-导出pkcs8公钥" aria-hidden="true">#</a> 2.2.2 导出公钥：从PKCS8私钥 导出PKCS8公钥</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl rsa <span class="token parameter variable">-in</span> private_pkcs8.pem <span class="token parameter variable">-pubout</span> <span class="token parameter variable">-out</span> public_pkcs8_2.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-2-3-公钥-pkcs8-pkcs1" tabindex="-1"><a class="header-anchor" href="#_2-2-3-公钥-pkcs8-pkcs1" aria-hidden="true">#</a> 2.2.3 公钥：<code>PKCS8</code> -&gt; <code>PKCS1</code></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl rsa <span class="token parameter variable">-pubin</span> <span class="token parameter variable">-in</span> public_pkcs8.pem <span class="token parameter variable">-RSAPublicKey_out</span>

<span class="token comment"># 末尾加上-out 文件名 可以写入文件</span>
openssl rsa <span class="token parameter variable">-pubin</span> <span class="token parameter variable">-in</span> public_pkcs8.pem <span class="token parameter variable">-RSAPublicKey_out</span> <span class="token parameter variable">-out</span> public_pkcs1.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-4-公钥-pkcs1-pkcs8" tabindex="-1"><a class="header-anchor" href="#_2-2-4-公钥-pkcs1-pkcs8" aria-hidden="true">#</a> 2.2.4 公钥：<code>pkcs1</code> -&gt; <code>pkcs8</code></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl rsa <span class="token parameter variable">-in</span> public_pkcs1.pem <span class="token parameter variable">-pubout</span> <span class="token parameter variable">-RSAPublicKey_in</span>

<span class="token comment"># 末尾加上-out 文件名 可以写入文件</span>
openssl rsa <span class="token parameter variable">-in</span> public_pkcs1.pem <span class="token parameter variable">-pubout</span> <span class="token parameter variable">-RSAPublicKey_in</span> <span class="token parameter variable">-out</span> public_pkcs8_3.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-扩展" tabindex="-1"><a class="header-anchor" href="#_2-3-扩展" aria-hidden="true">#</a> 2.3 扩展</h3><h4 id="_2-3-1-单行私钥值format成多行" tabindex="-1"><a class="header-anchor" href="#_2-3-1-单行私钥值format成多行" aria-hidden="true">#</a> 2.3.1 单行私钥值format成多行</h4><blockquote><p>有时候配置文件里写的是单行的配置信息，想format一下，一行一行敲回车太累了。</p></blockquote><ul><li><p>解析ASN1结构，判断是PKCS8还是PKCS1</p><blockquote><p>PKCS8带扩展信息，PKCS1不带。</p></blockquote></li><li><p>根据对应的结构，添加上头尾标识字符。</p><blockquote><p>比如这里添加上PKCS8的头尾信息。</p></blockquote></li></ul>`,38),V=a("img",{src:"https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/ image/202210171724790.png",alt:"image-20220831150413041",loading:"lazy"},null,-1),R={href:"https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/",target:"_blank",rel:"noopener noreferrer"},B=l(`<p>执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl rsa <span class="token parameter variable">-in</span> pri.key <span class="token parameter variable">-check</span>

<span class="token comment"># 之后它就会以PKCS1的格式输出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),w=a("img",{src:"https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/ image/202210171724901.png",alt:"image-20220831150856541",loading:"lazy"},null,-1),J={href:"https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/",target:"_blank",rel:"noopener noreferrer"},M=l(`<h2 id="_3-sm2" tabindex="-1"><a class="header-anchor" href="#_3-sm2" aria-hidden="true">#</a> 3.SM2</h2><blockquote><p>是否支持国密</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>openssl ecparam -list_curves | grep SM2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-1-私钥部分" tabindex="-1"><a class="header-anchor" href="#_3-1-私钥部分" aria-hidden="true">#</a> 3.1 私钥部分</h3><h4 id="_3-1-1-生成私钥-ec格式" tabindex="-1"><a class="header-anchor" href="#_3-1-1-生成私钥-ec格式" aria-hidden="true">#</a> 3.1.1 生成私钥：EC格式</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 注意此处默认生成的是ec格式,SM2是基于椭圆曲线的,一般看到EC相关的就可以认为跟SM2相关了。</span>
openssl ecparam <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-name</span> SM2 <span class="token parameter variable">-out</span> sm2_private_ec.key

<span class="token comment"># 查看私钥信息</span>
openssl ec <span class="token parameter variable">-in</span> sm2_private_ec.key <span class="token parameter variable">-text</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-2-私钥-ec-pkcs1" tabindex="-1"><a class="header-anchor" href="#_3-1-2-私钥-ec-pkcs1" aria-hidden="true">#</a> 3.1.2 私钥：EC -&gt; PKCS1</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl ec <span class="token parameter variable">-in</span> sm2_private_ec.key <span class="token parameter variable">-out</span> sm2_private_pkcs1.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-1-3-私钥-ec-pkcs8" tabindex="-1"><a class="header-anchor" href="#_3-1-3-私钥-ec-pkcs8" aria-hidden="true">#</a> 3.1.3 私钥：EC -&gt;PKCS8</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl pkcs8 <span class="token parameter variable">-topk8</span> <span class="token parameter variable">-inform</span> PEM <span class="token parameter variable">-in</span> sm2_private_ec.key <span class="token parameter variable">-outform</span> pem <span class="token parameter variable">-nocrypt</span> <span class="token parameter variable">-out</span> sm2_private_pkcs8.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-1-4-私钥-pkcs1-pkcs8" tabindex="-1"><a class="header-anchor" href="#_2-1-4-私钥-pkcs1-pkcs8" aria-hidden="true">#</a> 2.1.4 私钥：<code>PKCS1</code> -&gt; <code>PKCS8</code></h4><blockquote><p>从EC格式转成PKCS1/PKCS8格式后，其余的命令和RSA那里就是相通的了。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl pkcs8 <span class="token parameter variable">-topk8</span> <span class="token parameter variable">-inform</span> PEM <span class="token parameter variable">-in</span> sm2_private_pkcs1.key <span class="token parameter variable">-outform</span> pem <span class="token parameter variable">-nocrypt</span> <span class="token parameter variable">-out</span> sm2_private_pkcs8_2.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-1-5-私钥-pkcs8-pkcs1" tabindex="-1"><a class="header-anchor" href="#_2-1-5-私钥-pkcs8-pkcs1" aria-hidden="true">#</a> 2.1.5 私钥：<code>PKCS8</code> -&gt; <code>PKCS1</code></h4><blockquote><p>注意openssl后面的形参从rsa变成了ec</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl ec <span class="token parameter variable">-in</span> sm2_private_pkcs8_2.key <span class="token parameter variable">-out</span> sm2_private_pkcs1_2.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-2-公钥部分" tabindex="-1"><a class="header-anchor" href="#_3-2-公钥部分" aria-hidden="true">#</a> 3.2 公钥部分</h3><h4 id="_2-2-1-导出公钥-从ec私钥-导出pkcs8公钥" tabindex="-1"><a class="header-anchor" href="#_2-2-1-导出公钥-从ec私钥-导出pkcs8公钥" aria-hidden="true">#</a> 2.2.1 导出公钥：从EC私钥 导出PKCS8公钥</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>openssl ec -in sm2_private_ec.key -pubout -out sm2_public_pkcs8.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-2-2-导出公钥-从pkcs8私钥-导出pkcs8公钥-1" tabindex="-1"><a class="header-anchor" href="#_2-2-2-导出公钥-从pkcs8私钥-导出pkcs8公钥-1" aria-hidden="true">#</a> 2.2.2 导出公钥：从PKCS8私钥 导出PKCS8公钥</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>openssl ec -in sm2_private_pkcs8.key -pubout 

# 末尾加上-out 文件名 可以写入文件
openssl ec -in sm2_private_pkcs8.key -pubout -out sm2_public_pkcs8_2.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-3-公钥-pkcs8-pkcs1-1" tabindex="-1"><a class="header-anchor" href="#_2-2-3-公钥-pkcs8-pkcs1-1" aria-hidden="true">#</a> 2.2.3 公钥：PKCS8 -&gt; PKCS1</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-2-4-公钥-pkcs1-pkcs8-1" tabindex="-1"><a class="header-anchor" href="#_2-2-4-公钥-pkcs1-pkcs8-1" aria-hidden="true">#</a> 2.2.4 公钥：pkcs1 -&gt; pkcs8</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-3-签名" tabindex="-1"><a class="header-anchor" href="#_3-3-签名" aria-hidden="true">#</a> 3.3 签名</h3><h4 id="_3-3-1-pkcs1私钥进行签名" tabindex="-1"><a class="header-anchor" href="#_3-3-1-pkcs1私钥进行签名" aria-hidden="true">#</a> 3.3.1 PKCS1私钥进行签名</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># sha1 plain.txt</span>
openssl dgst <span class="token parameter variable">-sign</span> private.key <span class="token parameter variable">-sha1</span> <span class="token parameter variable">-out</span> sm2_file.sign plain.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-验签" tabindex="-1"><a class="header-anchor" href="#_3-4-验签" aria-hidden="true">#</a> 3.4 验签</h3><h4 id="_3-4-1-pkcs1公钥验证签名" tabindex="-1"><a class="header-anchor" href="#_3-4-1-pkcs1公钥验证签名" aria-hidden="true">#</a> 3.4.1 PKCS1公钥验证签名</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># sha1 plain.txt</span>
openssl dgst <span class="token parameter variable">-verify</span> pub.key <span class="token parameter variable">-sha1</span> <span class="token parameter variable">-signature</span> sm2_file.sign plain.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-数字证书" tabindex="-1"><a class="header-anchor" href="#_4-数字证书" aria-hidden="true">#</a> 4.数字证书</h2><h3 id="_4-1-查看证书序列号" tabindex="-1"><a class="header-anchor" href="#_4-1-查看证书序列号" aria-hidden="true">#</a> 4.1 查看证书序列号</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl x509 <span class="token parameter variable">-in</span> xx.cer <span class="token parameter variable">-noout</span> <span class="token parameter variable">-serial</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-2-获取证书中的公钥-pkcs8" tabindex="-1"><a class="header-anchor" href="#_4-2-获取证书中的公钥-pkcs8" aria-hidden="true">#</a> 4.2 获取证书中的公钥(PKCS8)</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openssl x509 <span class="token parameter variable">-in</span> xx.cer <span class="token parameter variable">-pubkey</span>  <span class="token parameter variable">-noout</span> <span class="token operator">&gt;</span> xx.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,36);function N(I,j){const n=i("router-link"),t=i("ExternalLinkIcon");return o(),c("div",null,[d(" more "),a("nav",v,[a("ul",null,[a("li",null,[s(n,{to:"#certbot"},{default:r(()=>[e("Certbot")]),_:1})]),a("li",null,[s(n,{to:"#keytool可视化工具"},{default:r(()=>[e("keytool可视化工具")]),_:1})]),a("li",null,[s(n,{to:"#证书格式"},{default:r(()=>[e("证书格式")]),_:1})]),a("li",null,[s(n,{to:"#密钥库文件格式【keystore】"},{default:r(()=>[e("密钥库文件格式【Keystore】")]),_:1}),a("ul",null,[a("li",null,[s(n,{to:"#keytool-命令"},{default:r(()=>[e("keytool 命令")]),_:1})]),a("li",null,[s(n,{to:"#keytool可视化工具-1"},{default:r(()=>[e("keytool可视化工具")]),_:1})]),a("li",null,[s(n,{to:"#keytool-命令-1"},{default:r(()=>[e("keytool 命令")]),_:1})])])]),a("li",null,[s(n,{to:"#证书格式-1"},{default:r(()=>[e("证书格式")]),_:1})]),a("li",null,[s(n,{to:"#keytool"},{default:r(()=>[e("keytool")]),_:1})]),a("li",null,[s(n,{to:"#openssl"},{default:r(()=>[e("openssl")]),_:1}),a("ul",null,[a("li",null,[s(n,{to:"#rsa"},{default:r(()=>[e("RSA")]),_:1})]),a("li",null,[s(n,{to:"#sm2"},{default:r(()=>[e("SM2")]),_:1})])])]),a("li",null,[s(n,{to:"#国密证书"},{default:r(()=>[e("国密证书")]),_:1})]),a("li",null,[s(n,{to:"#_1-背景"},{default:r(()=>[e("1.背景")]),_:1}),a("ul",null,[a("li",null,[s(n,{to:"#_1-2-证书内容格式-rsa为例"},{default:r(()=>[e("1.2 证书内容格式 ( RSA为例 )")]),_:1})]),a("li",null,[s(n,{to:"#_1-3-证书文件格式"},{default:r(()=>[e("1.3 证书文件格式")]),_:1})])])]),a("li",null,[s(n,{to:"#_2-rsa"},{default:r(()=>[e("2.RSA")]),_:1}),a("ul",null,[a("li",null,[s(n,{to:"#_2-1-私钥部分"},{default:r(()=>[e("2.1 私钥部分")]),_:1})]),a("li",null,[s(n,{to:"#_2-2-公钥部分"},{default:r(()=>[e("2.2 公钥部分")]),_:1})]),a("li",null,[s(n,{to:"#_2-3-扩展"},{default:r(()=>[e("2.3 扩展")]),_:1})])])]),a("li",null,[s(n,{to:"#_3-sm2"},{default:r(()=>[e("3.SM2")]),_:1}),a("ul",null,[a("li",null,[s(n,{to:"#_3-1-私钥部分"},{default:r(()=>[e("3.1 私钥部分")]),_:1})]),a("li",null,[s(n,{to:"#_3-2-公钥部分"},{default:r(()=>[e("3.2 公钥部分")]),_:1})]),a("li",null,[s(n,{to:"#_3-3-签名"},{default:r(()=>[e("3.3 签名")]),_:1})]),a("li",null,[s(n,{to:"#_3-4-验签"},{default:r(()=>[e("3.4 验签")]),_:1})])])]),a("li",null,[s(n,{to:"#_4-数字证书"},{default:r(()=>[e("4.数字证书")]),_:1}),a("ul",null,[a("li",null,[s(n,{to:"#_4-1-查看证书序列号"},{default:r(()=>[e("4.1 查看证书序列号")]),_:1})]),a("li",null,[s(n,{to:"#_4-2-获取证书中的公钥-pkcs8"},{default:r(()=>[e("4.2 获取证书中的公钥(PKCS8)")]),_:1})])])])])]),k,a("blockquote",null,[a("p",null,[a("a",b,[e("官方网址为 https://keystore-explorer.org/index.html"),s(t)])])]),u,a("blockquote",null,[a("p",null,[a("a",h,[e("官方网址为 https://keystore-explorer.org/index.html"),s(t)])])]),g,a("blockquote",null,[a("p",null,[e("OpenSSL官方文档: "),a("a",y,[e("https://www.openssl.org/docs/manpages.html"),s(t)])])]),_,a("blockquote",null,[a("p",null,[e("openssl版本低于"),x,e("版本不支持国密算法, "),f,e("上版本的资源包，下载地址："),a("a",E,[e("https://github.com/openssl/openssl/releases"),s(t)])])]),C,a("blockquote",null,[a("p",null,[e("GMSSL国密试验室网站生成: "),a("a",S,[e("https://www.gmssl.cn/gmssl/index.jsp"),s(t)])])]),A,a("blockquote",null,[a("p",null,[e("补充了一些相关信息，不单单只是秘钥值。其实这里可以看到，开头的RSA字眼已经消失了，因为我们能从"),a("a",D,[e("OID"),s(t)]),e("中查看到（后方有图）。")])]),K,a("p",null,[a("a",P,[e("参考：PEM 与 DER 格式详解"),s(t)])]),q,a("p",null,[e("["),V,e("]("),a("a",R,[e("https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/"),s(t)]),e(" image/202210171724790.png)")]),a("ul",null,[a("li",null,[B,a("p",null,[e("["),w,e("]("),a("a",J,[e("https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/"),s(t)]),e(" image/202210171724901.png)")])])]),M])}const U=p(m,[["render",N],["__file","20.自签证书.html.vue"]]);export{U as default};
