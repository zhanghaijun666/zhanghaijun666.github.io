import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as i,c,a as e,d as t,w as r,f as n,b as l}from"./app-d6438571.js";const d={},_={class:"table-of-contents"},h=n('<h2 id="主要考虑" tabindex="-1"><a class="header-anchor" href="#主要考虑" aria-hidden="true">#</a> 主要考虑</h2><ol><li>分布式系统文件存储。</li><li>文件分块的能力。断电续传、妙传等。</li><li>可扩展、</li><li>平滑迁移（可以不影响业务的情况下可以平滑迁移）</li><li>隔离性，产品应用的隔离性。</li><li>容错和灾备的能力。</li></ol><h2 id="fastdfs" tabindex="-1"><a class="header-anchor" href="#fastdfs" aria-hidden="true">#</a> FastDFS</h2><blockquote><p>FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。</p><p>分布式，没有单点依赖，用C编写，性能较好</p></blockquote><p>优点：<br> 支持在线扩容机制，增强系统的可扩展性<br> 实现了软RAID，增强系统的并发处理能力及数据容错恢复能力<br> 支持主从文件，支持自定义扩展名<br> 主备Tracker服务，增强系统的可用性</p><p>缺点：<br> 不支持POSIX通用接口访问，通用性较低<br> 对跨公网的文件同步，存在较大延迟，需要应用做相应的容错策略<br> 同步机制不支持文件正确性校验，降低了系统的可用性<br> 通过API下载，存在单点的性能瓶颈</p><h2 id="cephfs" tabindex="-1"><a class="header-anchor" href="#cephfs" aria-hidden="true">#</a> CephFS</h2><blockquote><p>开发语言：C++<br> 适合单集群的大中小文件<br> 不支持断点续传，不适合大文件存储。</p></blockquote><p>优点：<br> 支持对象存储（OSD）集群，通过CRUSH算法，完成文件动态定位，处理效率更高<br> 符合posix语义，支持通过FUSE方式挂载，降低客户端的开发成本，通用性高<br> 支持分布式的MDS/MON，无单点故障<br> 强大的容错处理和自愈能力<br> 支持在线扩容和冗余备份，增强系统的可靠性</p><p>缺点：<br> 部署和运维较复杂，集群管理工具较少</p>',10);function p(b,f){const a=s("router-link");return i(),c("div",null,[e("nav",_,[e("ul",null,[e("li",null,[t(a,{to:"#主要考虑"},{default:r(()=>[l("主要考虑")]),_:1})]),e("li",null,[t(a,{to:"#fastdfs"},{default:r(()=>[l("FastDFS")]),_:1})]),e("li",null,[t(a,{to:"#cephfs"},{default:r(()=>[l("CephFS")]),_:1})])])]),h])}const m=o(d,[["render",p],["__file","09.文件存储方案.html.vue"]]);export{m as default};
