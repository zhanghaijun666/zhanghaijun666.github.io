const e=JSON.parse('{"key":"v-1defe636","path":"/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/20.Java/81.20230815.html","title":"20230815","lang":"zh-CN","frontmatter":{"date":"2023-06-18T00:00:00.000Z","category":["编程技巧","Java"],"tag":["Java"],"description":"1、Redis 的单机、哨兵、集群的区别和选型？ 单机模式 在单机模式下，Redis 运行在单个实例上，所有的数据都存储在这一个实例中。优点包括部署简单、操作方便，适用于快速的数据缓存需求。 缺点 单点故障：如果 Redis 实例出现故障，数据可能会丢失。 有限的容量：内存容量受到物理服务器的限制。 不支持高可用性：无法提供自动故障转移或负载均衡。 哨兵模式","head":[["meta",{"property":"og:url","content":"https://haijunit.top/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/20.Java/81.20230815.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"20230815"}],["meta",{"property":"og:description","content":"1、Redis 的单机、哨兵、集群的区别和选型？ 单机模式 在单机模式下，Redis 运行在单个实例上，所有的数据都存储在这一个实例中。优点包括部署简单、操作方便，适用于快速的数据缓存需求。 缺点 单点故障：如果 Redis 实例出现故障，数据可能会丢失。 有限的容量：内存容量受到物理服务器的限制。 不支持高可用性：无法提供自动故障转移或负载均衡。 哨兵模式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-04T10:44:56.000Z"}],["meta",{"property":"article:author","content":"知识库"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-06-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-04T10:44:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"20230815\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-04T10:44:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"知识库\\",\\"url\\":\\"https://haijunit.top\\",\\"email\\":\\"zhanghaijun_java@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1、Redis 的单机、哨兵、集群的区别和选型？","slug":"_1、redis-的单机、哨兵、集群的区别和选型","link":"#_1、redis-的单机、哨兵、集群的区别和选型","children":[{"level":3,"title":"单机模式","slug":"单机模式","link":"#单机模式","children":[]},{"level":3,"title":"哨兵模式","slug":"哨兵模式","link":"#哨兵模式","children":[]},{"level":3,"title":"集群模式","slug":"集群模式","link":"#集群模式","children":[]}]},{"level":2,"title":"Redis 的数据结构和应用场景","slug":"redis-的数据结构和应用场景","link":"#redis-的数据结构和应用场景","children":[]},{"level":2,"title":"Redis 做数据库缓存，怎么解决双写的问题，是否有脏数据？","slug":"redis-做数据库缓存-怎么解决双写的问题-是否有脏数据","link":"#redis-做数据库缓存-怎么解决双写的问题-是否有脏数据","children":[]},{"level":2,"title":"MySQL 默认的事务隔离机制","slug":"mysql-默认的事务隔离机制","link":"#mysql-默认的事务隔离机制","children":[]},{"level":2,"title":"MySQL 执行 UPDAYE 是怎么执行的？","slug":"mysql-执行-updaye-是怎么执行的","link":"#mysql-执行-updaye-是怎么执行的","children":[]},{"level":2,"title":"HashMap 是现场不安全的，满足线程安全应该怎么处理？","slug":"hashmap-是现场不安全的-满足线程安全应该怎么处理","link":"#hashmap-是现场不安全的-满足线程安全应该怎么处理","children":[]},{"level":2,"title":"Executors.newCachedThreadPool()","slug":"executors-newcachedthreadpool","link":"#executors-newcachedthreadpool","children":[]},{"level":2,"title":"集成方案提供技术支持，典型的案例？","slug":"集成方案提供技术支持-典型的案例","link":"#集成方案提供技术支持-典型的案例","children":[]},{"level":2,"title":"高可用的部署方案？","slug":"高可用的部署方案","link":"#高可用的部署方案","children":[]}],"git":{"createdTime":1692096299000,"updatedTime":1693824296000,"contributors":[{"name":"zhanghaijun","email":"zhanghaijun@bjtxra.com","commits":2}]},"readingTime":{"minutes":2.13,"words":640},"filePathRelative":"30.编程技巧/20.Java/81.20230815.md","localizedDate":"2023年6月18日","excerpt":"<h2> 1、Redis 的单机、哨兵、集群的区别和选型？</h2>\\n<h3> 单机模式</h3>\\n<blockquote>\\n<p>在单机模式下，Redis 运行在单个实例上，所有的数据都存储在这一个实例中。优点包括部署简单、操作方便，适用于快速的数据缓存需求。</p>\\n</blockquote>\\n<ul>\\n<li>缺点\\n<ul>\\n<li>单点故障：如果 Redis 实例出现故障，数据可能会丢失。</li>\\n<li>有限的容量：内存容量受到物理服务器的限制。</li>\\n<li>不支持高可用性：无法提供自动故障转移或负载均衡。</li>\\n</ul>\\n</li>\\n</ul>\\n<h3> 哨兵模式</h3>","autoDesc":true}');export{e as data};
