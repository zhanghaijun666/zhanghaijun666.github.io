import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as i,c as y,a as t,b as e,d,e as g,w as n,f as c}from"./app-d6438571.js";const x={},o={href:"http://www.redis.cn/commands.html",target:"_blank",rel:"noopener noreferrer"},f={class:"table-of-contents"},m=c('<h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><table><thead><tr><th>数据类型</th><th>简单描述</th><th>使用场景</th></tr></thead><tbody><tr><td>String</td><td>常规的 key-value 缓存应用</td><td>场景：共享用户 session，计数器(<code>INCR</code>)，分布式锁(<code>setnx</code>)</td></tr><tr><td>hash</td><td>string 类型的 field 和 value 的映射表,适合用于存储对象</td><td>场景：爆品商品，秒杀仓库，库存量</td></tr><tr><td>list</td><td>存储列表结构，有序(插入顺序)可重复，基于<code>lrange</code>可实现简单的高性能分页</td><td>场景：文章的评论，简单的消息队列</td></tr><tr><td>set</td><td>无序，不重复</td><td>场景：共同好友，共同喜好，二度好友(你可能认识)</td></tr><tr><td>Zset</td><td>内部使用 HashMap 和跳跃表(SkipList)来保证数据的存储和有序</td><td>场景：排行榜，有权重的消息队列，热搜，</td></tr><tr><td>BitMap</td><td>通过一个 bit 位来表示某个元素对应的值或者状态</td><td>场景：统计用户的活跃数，在线人数</td></tr><tr><td>HyperLogLog</td><td>基于 bitmap 计数，内部编码主要分稀疏型和密集型</td><td>场景：记录网站 IP 注册数，每日访问的 IP 数，页面实时 UV、在线用户人数</td></tr><tr><td>Geospatial</td><td></td><td>场景：保存地理位置，位置距离计算，根据半径计算位置</td></tr></tbody></table><h2 id="redis-基本命令" tabindex="-1"><a class="header-anchor" href="#redis-基本命令" aria-hidden="true">#</a> Redis 基本命令</h2><table><thead><tr><th style="text-align:center;">数据类型</th><th style="text-align:left;">redis 命令</th><th>命令说明</th></tr></thead><tbody><tr><td style="text-align:center;">通用指令</td><td style="text-align:left;">del key</td><td>删除指定的 key</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">exists key</td><td>指定的 key 是否存在</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">type key</td><td>获取 key 的类型</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">expire key seconds</td><td>设置有效时间，单位：秒</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">pexpire key milliseconds</td><td>设置有效时间，单位：毫秒</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">expireat key timestamp</td><td>设置时间戳，单位：秒</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">pexpireat key milliseconds-timestamp</td><td>设置时间戳，单位：毫秒</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">ttl key</td><td>返回有效时间，单位：秒，key 存在但未设置有效时间，则返回-1</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">pttl key</td><td>返回有效时间，单位：毫秒，key 不存在，则返回-2</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">persist key</td><td>将 key 从时效性切换为永久性</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">keys *</td><td>pattern 是匹配模式，若是指定为 <code>*</code> 则查询所有 key</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">rename key newkey</td><td>重命名，覆盖式</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">renamenx key newkey</td><td>重命名，newkey 存在则报错</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">dbsize</td><td>返回当前数据库的 key 数量</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">flushdb</td><td><strong>清空当前数据库的 key</strong></td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">flushall</td><td><strong>清空所有数据库的 key</strong></td></tr><tr><td style="text-align:center;">String</td><td style="text-align:left;">mset name lisi age 30 gender 1</td><td>一次性保存多个数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">mget name age gender</td><td>一次性取出多个数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">strlen name</td><td>字符串长度</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">append name abc</td><td>字符串追加</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">incr num</td><td>自增一</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">incrby num 2</td><td>自增指定步长</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">incrbyfloat num 0.5</td><td>自增小数</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">decr num</td><td>自减一</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">decrby num 2</td><td>自减指定步长</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">decrbyfloat num 0.5</td><td>自减小数</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">setex key seconds 1</td><td>设置 key 的有效期，单位是秒</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">psetex key milliseconds 1000</td><td>设置 key 的有效期，单位是毫秒</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">del name</td><td>删除 name</td></tr><tr><td style="text-align:center;">hash</td><td style="text-align:left;">hmset user name zhangsan age 20</td><td>同时设置多个属性</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">hgetall user</td><td>将属性一次性读取出来</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">hmget user name age</td><td>获取指定属性</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">hdel user name</td><td>删除属性</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">hlen user</td><td>hash 中属性的数量</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">hexists user name</td><td>判断 hash 中是否存在指定的属性，存在返回 1，不存在返回 0</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">hincrby user age 1</td><td>属性自增</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">hincrbyfloat user age 0.5</td><td>属性自增小数</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">hincrby user age -1</td><td>属性自减</td></tr><tr><td style="text-align:center;">list</td><td style="text-align:left;">lpush nums 1 2 3 4 5</td><td>从左侧添加</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">rpush nums 1 2 3 4 5</td><td>从右侧添加</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">lrange nums 0 4</td><td>读取的索引范围</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">lpop key</td><td>从左侧弹出数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">rpop key</td><td>从右侧弹出数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">lrem nums 1 2</td><td>从数据中移除[cout]个指定数据[value]</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">lindex nums 0</td><td>获取指定索引上的数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">llen nums</td><td>获取 list 的长度</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">blpop nums 2 3 30</td><td>规定时间内获取并移除数据、blpop key1 [key2] timeout</td></tr><tr><td style="text-align:center;">set</td><td style="text-align:left;">sadd nums 1 2 3</td><td>添加数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">smembers nums</td><td>获取到 set 中的所有数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">srem nums 1 2</td><td>删除数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">sismember nums 1</td><td>判断 set 中是否包含指定的数据</td></tr><tr><td style="text-align:center;">sorted_set</td><td style="text-align:left;">zadd scores 95 chinese 98 math 85 english</td><td>保存数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">zrange scores 0 -1</td><td>获取全部数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">zrange scores 0 -1 withscores</td><td>排序的方式获取数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">zrevrange scores 0 -1 withscores</td><td>逆序的方式获取数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">zrem scores chinese math</td><td>删除数据</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">zrangebyscore scores 0 95</td><td>其中 scores 是 key， <code>0 95</code> 是查找范围</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">zrangebyscore scores 0 100 limit 0 2</td><td>查询分数在 100 以下的前两个数据</td></tr></tbody></table>',4);function h(u,k){const s=r("ExternalLinkIcon"),l=r("router-link");return i(),y("div",null,[t("blockquote",null,[t("p",null,[e("官方命令大全网址："),t("a",o,[e("http://www.redis.cn/commands.html"),d(s)])])]),g(" more "),t("nav",f,[t("ul",null,[t("li",null,[d(l,{to:"#数据类型"},{default:n(()=>[e("数据类型")]),_:1})]),t("li",null,[d(l,{to:"#redis-基本命令"},{default:n(()=>[e("Redis 基本命令")]),_:1})])])]),m])}const _=a(x,[["render",h],["__file","20.Redis命令.html.vue"]]);export{_ as default};
