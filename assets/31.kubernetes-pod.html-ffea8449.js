import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as t,c,a as e,d as n,w as i,b as o,f as a}from"./app-d6438571.js";const u={},p={class:"table-of-contents"},m=a(`<h2 id="pod-排错" tabindex="-1"><a class="header-anchor" href="#pod-排错" aria-hidden="true">#</a> Pod 排错</h2><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><ul><li>查看 Pod 状态: <code>kubectl get pod &lt;POD_NAME&gt; -o wide</code></li><li>查看 Pod 的 yaml 配置: <code>kubectl get pod &lt;POD_NAME&gt; -o yaml</code></li><li>查看 Pod 事件: <code>kubectl describe pod &lt;POD_NAME&gt;</code></li><li>查看容器日志: <code>kubectl logs &lt;POD_NAME&gt; [-c &lt;CONTAINER_NAME&gt;]</code></li></ul><h2 id="pod-状态" tabindex="-1"><a class="header-anchor" href="#pod-状态" aria-hidden="true">#</a> Pod 状态</h2><p>Pod 有多种状态，这里罗列一下:</p><ul><li><code>Error</code> : Pod 启动过程中发生错误</li><li><code>NodeLost</code> : Pod 所在节点失联</li><li><code>Unkown</code> : Pod 所在节点失联或其它未知异常</li><li><code>Waiting</code> : Pod 等待启动</li><li><code>Pending</code> : Pod 等待被调度</li><li><code>ContainerCreating</code> : Pod 容器正在被创建</li><li><code>Terminating</code> : Pod 正在被销毁</li><li><code>CrashLoopBackOff</code> ： 容器退出，kubelet 正在将它重启</li><li><code>InvalidImageName</code> ： 无法解析镜像名称</li><li><code>ImageInspectError</code> ： 无法校验镜像</li><li><code>ErrImageNeverPull</code> ： 策略禁止拉取镜像</li><li><code>ImagePullBackOff</code> ： 正在重试拉取</li><li><code>RegistryUnavailable</code> ： 连接不到镜像中心</li><li><code>ErrImagePull</code> ： 通用的拉取镜像出错</li><li><code>CreateContainerConfigError</code> ： 不能创建 kubelet 使用的容器配置</li><li><code>CreateContainerError</code> ： 创建容器失败</li><li><code>RunContainerError</code> ： 启动容器失败</li><li><code>PreStartHookError</code> : 执行 preStart hook 报错</li><li><code>PostStartHookError</code> ： 执行 postStart hook 报错</li><li><code>ContainersNotInitialized</code> ： 容器没有初始化完毕</li><li><code>ContainersNotReady</code> ： 容器没有准备完毕</li><li><code>ContainerCreating</code> ：容器创建中</li><li><code>PodInitializing</code> ：pod 初始化中</li><li><code>DockerDaemonNotReady</code> ：docker还没有完全启动</li><li><code>NetworkPluginNotReady</code> ： 网络插件还没有完全启动</li></ul><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h2><h3 id="pod-一直处于-pending-状态" tabindex="-1"><a class="header-anchor" href="#pod-一直处于-pending-状态" aria-hidden="true">#</a> Pod 一直处于 Pending 状态</h3><blockquote><p>Pending 状态说明 Pod 还没有被调度到某个节点上，需要看下 Pod 事件进一步判断原因，比如</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl describe pod tikv-0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下面列举下可能原因</p>`,11),h=e("li",null,[e("p",null,"节点资源不够"),e("ul",null,[e("li",null,"CPU 负载过高"),e("li",null,"剩余可以被分配的内存不够"),e("li",null,"剩余可用 GPU 数量不够 (通常在机器学习场景，GPU 集群环境)")])],-1),k=e("p",null,"不满足 nodeSelector 与 affinity",-1),b={href:"https://kubernetes.io/zh-cn/docs/concepts/scheduling-eviction/assign-pod-node/",target:"_blank",rel:"noopener noreferrer"},P=a(`<li><p>Node 存在 Pod 没有容忍的污点</p><blockquote><p>如果节点上存在污点 (Taints)，而 Pod 没有响应的容忍 (Tolerations)，Pod 也将不会调度上去。通过 describe node 可以看下 Node 有哪些 Taints:</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 查看节点</span>
kubectl describe nodes host1
<span class="token comment"># Taints: special=true:NoSchedule</span>
<span class="token comment">###### 手动添加的污点</span>
kubectl taint <span class="token function">node</span> host1 <span class="token assign-left variable">special</span><span class="token operator">=</span>true:NoSchedule
<span class="token comment">###### 自动添加的污点</span>
<span class="token comment"># OutOfDisk           True      node.kubernetes.io/out-of-disk            为 True 表示节点磁盘空间不够了</span>
<span class="token comment"># Ready               False     node.kubernetes.io/not-ready              为 False 表示节点不健康</span>
<span class="token comment"># Ready               Unknown   node.kubernetes.io/unreachable            为 Unknown 表示节点失联，在 node-monitor-grace-period 这么长的时间内没有上报状态 controller-manager 就会将 Node 状态置为 Unknown (默认 40s)</span>
<span class="token comment"># MemoryPressure      True      node.kubernetes.io/memory-pressure        为 True 表示节点内存压力大，实际可用内存很少</span>
<span class="token comment"># PIDPressure         True      node.kubernetes.io/pid-pressure           为 True 表示节点上运行了太多进程，PID 数量不够用了</span>
<span class="token comment"># DiskPressure        True      node.kubernetes.io/disk-pressure          为 True 表示节点上的磁盘可用空间太少了</span>
<span class="token comment"># NetworkUnavailable  True      node.kubernetes.io/network-unavailable    为 True 表示节点上的网络没有正确配置，无法跟其它 Pod 正常通信</span>
<span class="token comment"># 另外，在云环境下，比如腾讯云 TKE，添加新节点会先给这个 Node 加上node.cloudprovider.kubernetes.io/uninitialized 的污点，等 Node 初始化成功后才自动移除这个污点，避免 Pod 被调度到没初始化好的 Node 上。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),v=e("h3",{id:"pod-一直处于-error-状态",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pod-一直处于-error-状态","aria-hidden":"true"},"#"),o(" Pod 一直处于 Error 状态")],-1),_=e("p",null,"通常处于 Error 状态说明 Pod 启动过程中发生了错误。常见的原因包括：",-1),g=e("ul",null,[e("li",null,"依赖的 ConfigMap、Secret 或者 PV 等不存在"),e("li",null,"请求的资源超过了管理员设置的限制，比如超过了 LimitRange 等"),e("li",null,"违反集群的安全策略，比如违反了 PodSecurityPolicy 等"),e("li",null,"容器无权操作集群内的资源，比如开启 RBAC 后，需要为 ServiceAccount 配置角色绑定")],-1);function f(N,E){const l=d("router-link"),s=d("ExternalLinkIcon");return t(),c("div",null,[e("nav",p,[e("ul",null,[e("li",null,[n(l,{to:"#pod-排错"},{default:i(()=>[o("Pod 排错")]),_:1})]),e("li",null,[n(l,{to:"#常用命令"},{default:i(()=>[o("常用命令")]),_:1})]),e("li",null,[n(l,{to:"#pod-状态"},{default:i(()=>[o("Pod 状态")]),_:1})]),e("li",null,[n(l,{to:"#常见问题"},{default:i(()=>[o("常见问题")]),_:1}),e("ul",null,[e("li",null,[n(l,{to:"#pod-一直处于-pending-状态"},{default:i(()=>[o("Pod 一直处于 Pending 状态")]),_:1})]),e("li",null,[n(l,{to:"#pod-一直处于-error-状态"},{default:i(()=>[o("Pod 一直处于 Error 状态")]),_:1})])])])])]),m,e("ul",null,[h,e("li",null,[k,e("ul",null,[e("li",null,[o("参考官方文档："),e("a",b,[o("https://kubernetes.io/zh-cn/docs/concepts/scheduling-eviction/assign-pod-node/"),n(s)])])])]),P]),v,_,g])}const x=r(u,[["render",f],["__file","31.kubernetes-pod.html.vue"]]);export{x as default};
